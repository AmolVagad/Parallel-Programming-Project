// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace lanes {
class LaneGeometryPolylineLayerTileDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaneGeometryPolylineLayerTile>
     _instance;
} _LaneGeometryPolylineLayerTile_default_instance_;
class LaneGroupGeometryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaneGroupGeometry>
     _instance;
} _LaneGroupGeometry_default_instance_;
class LaneGeometryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaneGeometry>
     _instance;
} _LaneGeometry_default_instance_;
class LaneBoundaryGeometryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LaneBoundaryGeometry>
     _instance;
} _LaneBoundaryGeometry_default_instance_;

namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometryPolylineLayerTile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometryPolylineLayerTile, here_tile_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometryPolylineLayerTile, tile_center_here_3d_coordinate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometryPolylineLayerTile, lane_group_geometries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGroupGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGroupGeometry, lane_group_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGroupGeometry, reference_geometry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGroupGeometry, lane_geometries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGroupGeometry, lane_boundary_geometries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometry, lane_path_geometry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometry, left_lane_boundary_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneGeometry, right_lane_boundary_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneBoundaryGeometry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaneBoundaryGeometry, geometry_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(LaneGeometryPolylineLayerTile)},
  { 8, -1, sizeof(LaneGroupGeometry)},
  { 17, -1, sizeof(LaneGeometry)},
  { 25, -1, sizeof(LaneBoundaryGeometry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaneGeometryPolylineLayerTile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaneGroupGeometry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaneGeometry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LaneBoundaryGeometry_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::here::pb::hdmap::external::v1::geometry::protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  _LaneGeometryPolylineLayerTile_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaneGeometryPolylineLayerTile_default_instance_);_LaneGroupGeometry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaneGroupGeometry_default_instance_);_LaneGeometry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaneGeometry_default_instance_);_LaneBoundaryGeometry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LaneBoundaryGeometry_default_instance_);_LaneGeometryPolylineLayerTile_default_instance_._instance.get_mutable()->tile_center_here_3d_coordinate_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      ::com::here::pb::hdmap::external::v1::geometry::Point3d::internal_default_instance());
  _LaneGroupGeometry_default_instance_._instance.get_mutable()->reference_geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
  _LaneGeometry_default_instance_._instance.get_mutable()->lane_path_geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
  _LaneBoundaryGeometry_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nFcom/here/pb/hdmap/external/v1/lanes/la"
      "yer-lane-geometry-polyline.proto\022#com.he"
      "re.pb.hdmap.external.v1.lanes\0325com/here/"
      "pb/hdmap/external/v1/geometry/geometry.p"
      "roto\"\345\001\n\035LaneGeometryPolylineLayerTile\022\024"
      "\n\014here_tile_id\030\001 \001(\r\022W\n\036tile_center_here"
      "_3d_coordinate\030\002 \001(\0132/.com.here.pb.hdmap"
      ".external.v1.geometry.Point3d\022U\n\025lane_gr"
      "oup_geometries\030\003 \003(\01326.com.here.pb.hdmap"
      ".external.v1.lanes.LaneGroupGeometry\"\254\002\n"
      "\021LaneGroupGeometry\022\026\n\016lane_group_ref\030\001 \001"
      "(\004\022V\n\022reference_geometry\030\002 \001(\0132:.com.her"
      "e.pb.hdmap.external.v1.geometry.LineStri"
      "ng3dOffset\022J\n\017lane_geometries\030\003 \003(\01321.co"
      "m.here.pb.hdmap.external.v1.lanes.LaneGe"
      "ometry\022[\n\030lane_boundary_geometries\030\004 \003(\013"
      "29.com.here.pb.hdmap.external.v1.lanes.L"
      "aneBoundaryGeometry\"\255\001\n\014LaneGeometry\022V\n\022"
      "lane_path_geometry\030\001 \001(\0132:.com.here.pb.h"
      "dmap.external.v1.geometry.LineString3dOf"
      "fset\022!\n\031left_lane_boundary_number\030\002 \001(\r\022"
      "\"\n\032right_lane_boundary_number\030\003 \001(\r\"d\n\024L"
      "aneBoundaryGeometry\022L\n\010geometry\030\001 \001(\0132:."
      "com.here.pb.hdmap.external.v1.geometry.L"
      "ineString3dOffsetb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 985);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "com/here/pb/hdmap/external/v1/lanes/layer-lane-geometry-polyline.proto", &protobuf_RegisterTypes);
  ::com::here::pb::hdmap::external::v1::geometry::protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGeometryPolylineLayerTile::kHereTileIdFieldNumber;
const int LaneGeometryPolylineLayerTile::kTileCenterHere3DCoordinateFieldNumber;
const int LaneGeometryPolylineLayerTile::kLaneGroupGeometriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGeometryPolylineLayerTile::LaneGeometryPolylineLayerTile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}
LaneGeometryPolylineLayerTile::LaneGeometryPolylineLayerTile(const LaneGeometryPolylineLayerTile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lane_group_geometries_(from.lane_group_geometries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tile_center_here_3d_coordinate()) {
    tile_center_here_3d_coordinate_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d(*from.tile_center_here_3d_coordinate_);
  } else {
    tile_center_here_3d_coordinate_ = NULL;
  }
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}

void LaneGeometryPolylineLayerTile::SharedCtor() {
  ::memset(&tile_center_here_3d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&here_tile_id_) -
      reinterpret_cast<char*>(&tile_center_here_3d_coordinate_)) + sizeof(here_tile_id_));
  _cached_size_ = 0;
}

LaneGeometryPolylineLayerTile::~LaneGeometryPolylineLayerTile() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  SharedDtor();
}

void LaneGeometryPolylineLayerTile::SharedDtor() {
  if (this != internal_default_instance()) delete tile_center_here_3d_coordinate_;
}

void LaneGeometryPolylineLayerTile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaneGeometryPolylineLayerTile::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaneGeometryPolylineLayerTile& LaneGeometryPolylineLayerTile::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaneGeometryPolylineLayerTile* LaneGeometryPolylineLayerTile::New(::google::protobuf::Arena* arena) const {
  LaneGeometryPolylineLayerTile* n = new LaneGeometryPolylineLayerTile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaneGeometryPolylineLayerTile::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_group_geometries_.Clear();
  if (GetArenaNoVirtual() == NULL && tile_center_here_3d_coordinate_ != NULL) {
    delete tile_center_here_3d_coordinate_;
  }
  tile_center_here_3d_coordinate_ = NULL;
  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LaneGeometryPolylineLayerTile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tile_center_here_3d_coordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lane_group_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return false;
#undef DO_
}

void LaneGeometryPolylineLayerTile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->tile_center_here_3d_coordinate_, output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lane_group_geometries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
}

::google::protobuf::uint8* LaneGeometryPolylineLayerTile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->tile_center_here_3d_coordinate_, deterministic, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_group_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->lane_group_geometries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  return target;
}

size_t LaneGeometryPolylineLayerTile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_group_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lane_group_geometries(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
  if (this->has_tile_center_here_3d_coordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tile_center_here_3d_coordinate_);
  }

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaneGeometryPolylineLayerTile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGeometryPolylineLayerTile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaneGeometryPolylineLayerTile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
    MergeFrom(*source);
  }
}

void LaneGeometryPolylineLayerTile::MergeFrom(const LaneGeometryPolylineLayerTile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_group_geometries_.MergeFrom(from.lane_group_geometries_);
  if (from.has_tile_center_here_3d_coordinate()) {
    mutable_tile_center_here_3d_coordinate()->::com::here::pb::hdmap::external::v1::geometry::Point3d::MergeFrom(from.tile_center_here_3d_coordinate());
  }
  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void LaneGeometryPolylineLayerTile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGeometryPolylineLayerTile::CopyFrom(const LaneGeometryPolylineLayerTile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGeometryPolylineLayerTile::IsInitialized() const {
  return true;
}

void LaneGeometryPolylineLayerTile::Swap(LaneGeometryPolylineLayerTile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGeometryPolylineLayerTile::InternalSwap(LaneGeometryPolylineLayerTile* other) {
  using std::swap;
  lane_group_geometries_.InternalSwap(&other->lane_group_geometries_);
  swap(tile_center_here_3d_coordinate_, other->tile_center_here_3d_coordinate_);
  swap(here_tile_id_, other->here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaneGeometryPolylineLayerTile::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaneGeometryPolylineLayerTile

// uint32 here_tile_id = 1;
void LaneGeometryPolylineLayerTile::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
::google::protobuf::uint32 LaneGeometryPolylineLayerTile::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.here_tile_id)
  return here_tile_id_;
}
void LaneGeometryPolylineLayerTile::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.here_tile_id)
}

// .com.here.pb.hdmap.external.v1.geometry.Point3d tile_center_here_3d_coordinate = 2;
bool LaneGeometryPolylineLayerTile::has_tile_center_here_3d_coordinate() const {
  return this != internal_default_instance() && tile_center_here_3d_coordinate_ != NULL;
}
void LaneGeometryPolylineLayerTile::clear_tile_center_here_3d_coordinate() {
  if (GetArenaNoVirtual() == NULL && tile_center_here_3d_coordinate_ != NULL) delete tile_center_here_3d_coordinate_;
  tile_center_here_3d_coordinate_ = NULL;
}
const ::com::here::pb::hdmap::external::v1::geometry::Point3d& LaneGeometryPolylineLayerTile::tile_center_here_3d_coordinate() const {
  const ::com::here::pb::hdmap::external::v1::geometry::Point3d* p = tile_center_here_3d_coordinate_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.tile_center_here_3d_coordinate)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      &::com::here::pb::hdmap::external::v1::geometry::_Point3d_default_instance_);
}
::com::here::pb::hdmap::external::v1::geometry::Point3d* LaneGeometryPolylineLayerTile::mutable_tile_center_here_3d_coordinate() {
  
  if (tile_center_here_3d_coordinate_ == NULL) {
    tile_center_here_3d_coordinate_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.tile_center_here_3d_coordinate)
  return tile_center_here_3d_coordinate_;
}
::com::here::pb::hdmap::external::v1::geometry::Point3d* LaneGeometryPolylineLayerTile::release_tile_center_here_3d_coordinate() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.tile_center_here_3d_coordinate)
  
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* temp = tile_center_here_3d_coordinate_;
  tile_center_here_3d_coordinate_ = NULL;
  return temp;
}
void LaneGeometryPolylineLayerTile::set_allocated_tile_center_here_3d_coordinate(::com::here::pb::hdmap::external::v1::geometry::Point3d* tile_center_here_3d_coordinate) {
  delete tile_center_here_3d_coordinate_;
  tile_center_here_3d_coordinate_ = tile_center_here_3d_coordinate;
  if (tile_center_here_3d_coordinate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.tile_center_here_3d_coordinate)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry lane_group_geometries = 3;
int LaneGeometryPolylineLayerTile::lane_group_geometries_size() const {
  return lane_group_geometries_.size();
}
void LaneGeometryPolylineLayerTile::clear_lane_group_geometries() {
  lane_group_geometries_.Clear();
}
const ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry& LaneGeometryPolylineLayerTile::lane_group_geometries(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.lane_group_geometries)
  return lane_group_geometries_.Get(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry* LaneGeometryPolylineLayerTile::mutable_lane_group_geometries(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.lane_group_geometries)
  return lane_group_geometries_.Mutable(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry* LaneGeometryPolylineLayerTile::add_lane_group_geometries() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.lane_group_geometries)
  return lane_group_geometries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry >*
LaneGeometryPolylineLayerTile::mutable_lane_group_geometries() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.lane_group_geometries)
  return &lane_group_geometries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGroupGeometry >&
LaneGeometryPolylineLayerTile::lane_group_geometries() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGeometryPolylineLayerTile.lane_group_geometries)
  return lane_group_geometries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGroupGeometry::kLaneGroupRefFieldNumber;
const int LaneGroupGeometry::kReferenceGeometryFieldNumber;
const int LaneGroupGeometry::kLaneGeometriesFieldNumber;
const int LaneGroupGeometry::kLaneBoundaryGeometriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGroupGeometry::LaneGroupGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}
LaneGroupGeometry::LaneGroupGeometry(const LaneGroupGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      lane_geometries_(from.lane_geometries_),
      lane_boundary_geometries_(from.lane_boundary_geometries_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reference_geometry()) {
    reference_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.reference_geometry_);
  } else {
    reference_geometry_ = NULL;
  }
  lane_group_ref_ = from.lane_group_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}

void LaneGroupGeometry::SharedCtor() {
  ::memset(&reference_geometry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_ref_) -
      reinterpret_cast<char*>(&reference_geometry_)) + sizeof(lane_group_ref_));
  _cached_size_ = 0;
}

LaneGroupGeometry::~LaneGroupGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  SharedDtor();
}

void LaneGroupGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete reference_geometry_;
}

void LaneGroupGeometry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaneGroupGeometry::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaneGroupGeometry& LaneGroupGeometry::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaneGroupGeometry* LaneGroupGeometry::New(::google::protobuf::Arena* arena) const {
  LaneGroupGeometry* n = new LaneGroupGeometry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaneGroupGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lane_geometries_.Clear();
  lane_boundary_geometries_.Clear();
  if (GetArenaNoVirtual() == NULL && reference_geometry_ != NULL) {
    delete reference_geometry_;
  }
  reference_geometry_ = NULL;
  lane_group_ref_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool LaneGroupGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reference_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lane_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lane_boundary_geometries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return false;
#undef DO_
}

void LaneGroupGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_ref(), output);
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->reference_geometry_, output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lane_geometries(static_cast<int>(i)), output);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_boundary_geometries_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->lane_boundary_geometries(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
}

::google::protobuf::uint8* LaneGroupGeometry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_ref(), target);
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->reference_geometry_, deterministic, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->lane_geometries(static_cast<int>(i)), deterministic, target);
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lane_boundary_geometries_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->lane_boundary_geometries(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  return target;
}

size_t LaneGroupGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lane_geometries(static_cast<int>(i)));
    }
  }

  // repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->lane_boundary_geometries_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lane_boundary_geometries(static_cast<int>(i)));
    }
  }

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
  if (this->has_reference_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reference_geometry_);
  }

  // uint64 lane_group_ref = 1;
  if (this->lane_group_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaneGroupGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGroupGeometry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaneGroupGeometry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
    MergeFrom(*source);
  }
}

void LaneGroupGeometry::MergeFrom(const LaneGroupGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  lane_geometries_.MergeFrom(from.lane_geometries_);
  lane_boundary_geometries_.MergeFrom(from.lane_boundary_geometries_);
  if (from.has_reference_geometry()) {
    mutable_reference_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.reference_geometry());
  }
  if (from.lane_group_ref() != 0) {
    set_lane_group_ref(from.lane_group_ref());
  }
}

void LaneGroupGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGroupGeometry::CopyFrom(const LaneGroupGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGroupGeometry::IsInitialized() const {
  return true;
}

void LaneGroupGeometry::Swap(LaneGroupGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGroupGeometry::InternalSwap(LaneGroupGeometry* other) {
  using std::swap;
  lane_geometries_.InternalSwap(&other->lane_geometries_);
  lane_boundary_geometries_.InternalSwap(&other->lane_boundary_geometries_);
  swap(reference_geometry_, other->reference_geometry_);
  swap(lane_group_ref_, other->lane_group_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaneGroupGeometry::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaneGroupGeometry

// uint64 lane_group_ref = 1;
void LaneGroupGeometry::clear_lane_group_ref() {
  lane_group_ref_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 LaneGroupGeometry::lane_group_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_group_ref)
  return lane_group_ref_;
}
void LaneGroupGeometry::set_lane_group_ref(::google::protobuf::uint64 value) {
  
  lane_group_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_group_ref)
}

// .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset reference_geometry = 2;
bool LaneGroupGeometry::has_reference_geometry() const {
  return this != internal_default_instance() && reference_geometry_ != NULL;
}
void LaneGroupGeometry::clear_reference_geometry() {
  if (GetArenaNoVirtual() == NULL && reference_geometry_ != NULL) delete reference_geometry_;
  reference_geometry_ = NULL;
}
const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& LaneGroupGeometry::reference_geometry() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* p = reference_geometry_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.reference_geometry)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString3dOffset_default_instance_);
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneGroupGeometry::mutable_reference_geometry() {
  
  if (reference_geometry_ == NULL) {
    reference_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.reference_geometry)
  return reference_geometry_;
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneGroupGeometry::release_reference_geometry() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.reference_geometry)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* temp = reference_geometry_;
  reference_geometry_ = NULL;
  return temp;
}
void LaneGroupGeometry::set_allocated_reference_geometry(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* reference_geometry) {
  delete reference_geometry_;
  reference_geometry_ = reference_geometry;
  if (reference_geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.reference_geometry)
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneGeometry lane_geometries = 3;
int LaneGroupGeometry::lane_geometries_size() const {
  return lane_geometries_.size();
}
void LaneGroupGeometry::clear_lane_geometries() {
  lane_geometries_.Clear();
}
const ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry& LaneGroupGeometry::lane_geometries(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_geometries)
  return lane_geometries_.Get(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneGeometry* LaneGroupGeometry::mutable_lane_geometries(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_geometries)
  return lane_geometries_.Mutable(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneGeometry* LaneGroupGeometry::add_lane_geometries() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_geometries)
  return lane_geometries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry >*
LaneGroupGeometry::mutable_lane_geometries() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_geometries)
  return &lane_geometries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneGeometry >&
LaneGroupGeometry::lane_geometries() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_geometries)
  return lane_geometries_;
}

// repeated .com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry lane_boundary_geometries = 4;
int LaneGroupGeometry::lane_boundary_geometries_size() const {
  return lane_boundary_geometries_.size();
}
void LaneGroupGeometry::clear_lane_boundary_geometries() {
  lane_boundary_geometries_.Clear();
}
const ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry& LaneGroupGeometry::lane_boundary_geometries(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_boundary_geometries)
  return lane_boundary_geometries_.Get(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry* LaneGroupGeometry::mutable_lane_boundary_geometries(int index) {
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_boundary_geometries)
  return lane_boundary_geometries_.Mutable(index);
}
::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry* LaneGroupGeometry::add_lane_boundary_geometries() {
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_boundary_geometries)
  return lane_boundary_geometries_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry >*
LaneGroupGeometry::mutable_lane_boundary_geometries() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_boundary_geometries)
  return &lane_boundary_geometries_;
}
const ::google::protobuf::RepeatedPtrField< ::com::here::pb::hdmap::external::v1::lanes::LaneBoundaryGeometry >&
LaneGroupGeometry::lane_boundary_geometries() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.lanes.LaneGroupGeometry.lane_boundary_geometries)
  return lane_boundary_geometries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneGeometry::kLanePathGeometryFieldNumber;
const int LaneGeometry::kLeftLaneBoundaryNumberFieldNumber;
const int LaneGeometry::kRightLaneBoundaryNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneGeometry::LaneGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}
LaneGeometry::LaneGeometry(const LaneGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lane_path_geometry()) {
    lane_path_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.lane_path_geometry_);
  } else {
    lane_path_geometry_ = NULL;
  }
  ::memcpy(&left_lane_boundary_number_, &from.left_lane_boundary_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_lane_boundary_number_) -
    reinterpret_cast<char*>(&left_lane_boundary_number_)) + sizeof(right_lane_boundary_number_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}

void LaneGeometry::SharedCtor() {
  ::memset(&lane_path_geometry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_lane_boundary_number_) -
      reinterpret_cast<char*>(&lane_path_geometry_)) + sizeof(right_lane_boundary_number_));
  _cached_size_ = 0;
}

LaneGeometry::~LaneGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  SharedDtor();
}

void LaneGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete lane_path_geometry_;
}

void LaneGeometry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaneGeometry::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaneGeometry& LaneGeometry::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaneGeometry* LaneGeometry::New(::google::protobuf::Arena* arena) const {
  LaneGeometry* n = new LaneGeometry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaneGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lane_path_geometry_ != NULL) {
    delete lane_path_geometry_;
  }
  lane_path_geometry_ = NULL;
  ::memset(&left_lane_boundary_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_lane_boundary_number_) -
      reinterpret_cast<char*>(&left_lane_boundary_number_)) + sizeof(right_lane_boundary_number_));
  _internal_metadata_.Clear();
}

bool LaneGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lane_path_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 left_lane_boundary_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_lane_boundary_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 right_lane_boundary_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &right_lane_boundary_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return false;
#undef DO_
}

void LaneGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->lane_path_geometry_, output);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->left_lane_boundary_number(), output);
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->right_lane_boundary_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
}

::google::protobuf::uint8* LaneGeometry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->lane_path_geometry_, deterministic, target);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->left_lane_boundary_number(), target);
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->right_lane_boundary_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  return target;
}

size_t LaneGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
  if (this->has_lane_path_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lane_path_geometry_);
  }

  // uint32 left_lane_boundary_number = 2;
  if (this->left_lane_boundary_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->left_lane_boundary_number());
  }

  // uint32 right_lane_boundary_number = 3;
  if (this->right_lane_boundary_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->right_lane_boundary_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaneGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneGeometry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaneGeometry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
    MergeFrom(*source);
  }
}

void LaneGeometry::MergeFrom(const LaneGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lane_path_geometry()) {
    mutable_lane_path_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.lane_path_geometry());
  }
  if (from.left_lane_boundary_number() != 0) {
    set_left_lane_boundary_number(from.left_lane_boundary_number());
  }
  if (from.right_lane_boundary_number() != 0) {
    set_right_lane_boundary_number(from.right_lane_boundary_number());
  }
}

void LaneGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneGeometry::CopyFrom(const LaneGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneGeometry::IsInitialized() const {
  return true;
}

void LaneGeometry::Swap(LaneGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneGeometry::InternalSwap(LaneGeometry* other) {
  using std::swap;
  swap(lane_path_geometry_, other->lane_path_geometry_);
  swap(left_lane_boundary_number_, other->left_lane_boundary_number_);
  swap(right_lane_boundary_number_, other->right_lane_boundary_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaneGeometry::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaneGeometry

// .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset lane_path_geometry = 1;
bool LaneGeometry::has_lane_path_geometry() const {
  return this != internal_default_instance() && lane_path_geometry_ != NULL;
}
void LaneGeometry::clear_lane_path_geometry() {
  if (GetArenaNoVirtual() == NULL && lane_path_geometry_ != NULL) delete lane_path_geometry_;
  lane_path_geometry_ = NULL;
}
const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& LaneGeometry::lane_path_geometry() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* p = lane_path_geometry_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.lane_path_geometry)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString3dOffset_default_instance_);
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneGeometry::mutable_lane_path_geometry() {
  
  if (lane_path_geometry_ == NULL) {
    lane_path_geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.lane_path_geometry)
  return lane_path_geometry_;
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneGeometry::release_lane_path_geometry() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.lane_path_geometry)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* temp = lane_path_geometry_;
  lane_path_geometry_ = NULL;
  return temp;
}
void LaneGeometry::set_allocated_lane_path_geometry(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* lane_path_geometry) {
  delete lane_path_geometry_;
  lane_path_geometry_ = lane_path_geometry;
  if (lane_path_geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.lane_path_geometry)
}

// uint32 left_lane_boundary_number = 2;
void LaneGeometry::clear_left_lane_boundary_number() {
  left_lane_boundary_number_ = 0u;
}
::google::protobuf::uint32 LaneGeometry::left_lane_boundary_number() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.left_lane_boundary_number)
  return left_lane_boundary_number_;
}
void LaneGeometry::set_left_lane_boundary_number(::google::protobuf::uint32 value) {
  
  left_lane_boundary_number_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.left_lane_boundary_number)
}

// uint32 right_lane_boundary_number = 3;
void LaneGeometry::clear_right_lane_boundary_number() {
  right_lane_boundary_number_ = 0u;
}
::google::protobuf::uint32 LaneGeometry::right_lane_boundary_number() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.right_lane_boundary_number)
  return right_lane_boundary_number_;
}
void LaneGeometry::set_right_lane_boundary_number(::google::protobuf::uint32 value) {
  
  right_lane_boundary_number_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.lanes.LaneGeometry.right_lane_boundary_number)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LaneBoundaryGeometry::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LaneBoundaryGeometry::LaneBoundaryGeometry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}
LaneBoundaryGeometry::LaneBoundaryGeometry(const LaneBoundaryGeometry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_geometry()) {
    geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset(*from.geometry_);
  } else {
    geometry_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}

void LaneBoundaryGeometry::SharedCtor() {
  geometry_ = NULL;
  _cached_size_ = 0;
}

LaneBoundaryGeometry::~LaneBoundaryGeometry() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  SharedDtor();
}

void LaneBoundaryGeometry::SharedDtor() {
  if (this != internal_default_instance()) delete geometry_;
}

void LaneBoundaryGeometry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaneBoundaryGeometry::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LaneBoundaryGeometry& LaneBoundaryGeometry::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::InitDefaults();
  return *internal_default_instance();
}

LaneBoundaryGeometry* LaneBoundaryGeometry::New(::google::protobuf::Arena* arena) const {
  LaneBoundaryGeometry* n = new LaneBoundaryGeometry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LaneBoundaryGeometry::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
  _internal_metadata_.Clear();
}

bool LaneBoundaryGeometry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return false;
#undef DO_
}

void LaneBoundaryGeometry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->geometry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
}

::google::protobuf::uint8* LaneBoundaryGeometry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->geometry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  return target;
}

size_t LaneBoundaryGeometry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->geometry_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaneBoundaryGeometry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  const LaneBoundaryGeometry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LaneBoundaryGeometry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
    MergeFrom(*source);
  }
}

void LaneBoundaryGeometry::MergeFrom(const LaneBoundaryGeometry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_geometry()) {
    mutable_geometry()->::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset::MergeFrom(from.geometry());
  }
}

void LaneBoundaryGeometry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaneBoundaryGeometry::CopyFrom(const LaneBoundaryGeometry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaneBoundaryGeometry::IsInitialized() const {
  return true;
}

void LaneBoundaryGeometry::Swap(LaneBoundaryGeometry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LaneBoundaryGeometry::InternalSwap(LaneBoundaryGeometry* other) {
  using std::swap;
  swap(geometry_, other->geometry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LaneBoundaryGeometry::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2flanes_2flayer_2dlane_2dgeometry_2dpolyline_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LaneBoundaryGeometry

// .com.here.pb.hdmap.external.v1.geometry.LineString3dOffset geometry = 1;
bool LaneBoundaryGeometry::has_geometry() const {
  return this != internal_default_instance() && geometry_ != NULL;
}
void LaneBoundaryGeometry::clear_geometry() {
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) delete geometry_;
  geometry_ = NULL;
}
const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset& LaneBoundaryGeometry::geometry() const {
  const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* p = geometry_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry.geometry)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset*>(
      &::com::here::pb::hdmap::external::v1::geometry::_LineString3dOffset_default_instance_);
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneBoundaryGeometry::mutable_geometry() {
  
  if (geometry_ == NULL) {
    geometry_ = new ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry.geometry)
  return geometry_;
}
::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* LaneBoundaryGeometry::release_geometry() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry.geometry)
  
  ::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* temp = geometry_;
  geometry_ = NULL;
  return temp;
}
void LaneBoundaryGeometry::set_allocated_geometry(::com::here::pb::hdmap::external::v1::geometry::LineString3dOffset* geometry) {
  delete geometry_;
  geometry_ = geometry;
  if (geometry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.lanes.LaneBoundaryGeometry.geometry)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace lanes
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

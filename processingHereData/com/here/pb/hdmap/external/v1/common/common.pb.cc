// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/common/common.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "com/here/pb/hdmap/external/v1/common/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace common {
class PartitionReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PartitionReference>
     _instance;
} _PartitionReference_default_instance_;
class GenericPartitionReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GenericPartitionReference>
     _instance;
} _GenericPartitionReference_default_instance_;
class LocalLinkReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LocalLinkReference>
     _instance;
} _LocalLinkReference_default_instance_;
class LocalNodeReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LocalNodeReference>
     _instance;
} _LocalNodeReference_default_instance_;
class TiledLinkReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TiledLinkReference>
     _instance;
} _TiledLinkReference_default_instance_;
class TiledNodeReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TiledNodeReference>
     _instance;
} _TiledNodeReference_default_instance_;
class TiledLaneGroupReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TiledLaneGroupReference>
     _instance;
} _TiledLaneGroupReference_default_instance_;
class TiledLaneGroupConnectorReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TiledLaneGroupConnectorReference>
     _instance;
} _TiledLaneGroupConnectorReference_default_instance_;
class ParametricRangeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParametricRange>
     _instance;
} _ParametricRange_default_instance_;
class ParametricLocationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ParametricLocation>
     _instance;
} _ParametricLocation_default_instance_;
class StrandAttributionLocalReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StrandAttributionLocalReference>
     _instance;
  ::google::protobuf::uint32 strand_attribution_id_;
  ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
} _StrandAttributionLocalReference_default_instance_;
class TiledStrandAttributionReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<TiledStrandAttributionReference>
     _instance;
  ::google::protobuf::uint32 strand_attribution_id_;
  ::google::protobuf::internal::ArenaStringPtr strand_attribution_ref_;
} _TiledStrandAttributionReference_default_instance_;
class SpecificationComplianceAssertionDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SpecificationComplianceAssertion>
     _instance;
} _SpecificationComplianceAssertion_default_instance_;
class LocalAdministrativeAreaReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LocalAdministrativeAreaReference>
     _instance;
} _LocalAdministrativeAreaReference_default_instance_;
class PartitionedAdministrativeAreaReferenceDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PartitionedAdministrativeAreaReference>
     _instance;
} _PartitionedAdministrativeAreaReference_default_instance_;

namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionReference, here_tile_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericPartitionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenericPartitionReference, generic_partition_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalLinkReference, link_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalNodeReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalNodeReference, node_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLinkReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLinkReference, link_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLinkReference, link_here_tile_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledNodeReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledNodeReference, node_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledNodeReference, node_here_tile_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupReference, lane_group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupReference, lane_group_here_tile_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupConnectorReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupConnectorReference, lane_group_connector_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledLaneGroupConnectorReference, lane_group_connector_here_tile_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricRange, range_offset_from_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricRange, range_offset_from_end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParametricLocation, location_offset_from_start_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrandAttributionLocalReference, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrandAttributionLocalReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(StrandAttributionLocalReferenceDefaultTypeInternal, strand_attribution_id_),
  offsetof(StrandAttributionLocalReferenceDefaultTypeInternal, strand_attribution_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StrandAttributionLocalReference, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledStrandAttributionReference, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledStrandAttributionReference, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(TiledStrandAttributionReferenceDefaultTypeInternal, strand_attribution_id_),
  offsetof(TiledStrandAttributionReferenceDefaultTypeInternal, strand_attribution_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledStrandAttributionReference, strand_attribution_here_tile_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiledStrandAttributionReference, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecificationComplianceAssertion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpecificationComplianceAssertion, compliant_with_specification_ref_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalAdministrativeAreaReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalAdministrativeAreaReference, administrative_area_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionedAdministrativeAreaReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionedAdministrativeAreaReference, administrative_area_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PartitionedAdministrativeAreaReference, administrative_area_partition_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PartitionReference)},
  { 6, -1, sizeof(GenericPartitionReference)},
  { 12, -1, sizeof(LocalLinkReference)},
  { 18, -1, sizeof(LocalNodeReference)},
  { 24, -1, sizeof(TiledLinkReference)},
  { 31, -1, sizeof(TiledNodeReference)},
  { 38, -1, sizeof(TiledLaneGroupReference)},
  { 45, -1, sizeof(TiledLaneGroupConnectorReference)},
  { 52, -1, sizeof(ParametricRange)},
  { 59, -1, sizeof(ParametricLocation)},
  { 65, -1, sizeof(StrandAttributionLocalReference)},
  { 73, -1, sizeof(TiledStrandAttributionReference)},
  { 82, -1, sizeof(SpecificationComplianceAssertion)},
  { 88, -1, sizeof(LocalAdministrativeAreaReference)},
  { 94, -1, sizeof(PartitionedAdministrativeAreaReference)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PartitionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GenericPartitionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LocalLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LocalNodeReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TiledLinkReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TiledNodeReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TiledLaneGroupReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TiledLaneGroupConnectorReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParametricRange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParametricLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StrandAttributionLocalReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TiledStrandAttributionReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SpecificationComplianceAssertion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LocalAdministrativeAreaReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PartitionedAdministrativeAreaReference_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "com/here/pb/hdmap/external/v1/common/common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PartitionReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PartitionReference_default_instance_);_GenericPartitionReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GenericPartitionReference_default_instance_);_LocalLinkReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LocalLinkReference_default_instance_);_LocalNodeReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LocalNodeReference_default_instance_);_TiledLinkReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TiledLinkReference_default_instance_);_TiledNodeReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TiledNodeReference_default_instance_);_TiledLaneGroupReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TiledLaneGroupReference_default_instance_);_TiledLaneGroupConnectorReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TiledLaneGroupConnectorReference_default_instance_);_ParametricRange_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParametricRange_default_instance_);_ParametricLocation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ParametricLocation_default_instance_);_StrandAttributionLocalReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StrandAttributionLocalReference_default_instance_);_TiledStrandAttributionReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_TiledStrandAttributionReference_default_instance_);_SpecificationComplianceAssertion_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SpecificationComplianceAssertion_default_instance_);_LocalAdministrativeAreaReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LocalAdministrativeAreaReference_default_instance_);_PartitionedAdministrativeAreaReference_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PartitionedAdministrativeAreaReference_default_instance_);_StrandAttributionLocalReference_default_instance_.strand_attribution_id_ = 0u;
  _StrandAttributionLocalReference_default_instance_.strand_attribution_ref_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TiledStrandAttributionReference_default_instance_.strand_attribution_id_ = 0u;
  _TiledStrandAttributionReference_default_instance_.strand_attribution_ref_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n1com/here/pb/hdmap/external/v1/common/c"
      "ommon.proto\022$com.here.pb.hdmap.external."
      "v1.common\"*\n\022PartitionReference\022\024\n\014here_"
      "tile_id\030\001 \001(\r\"9\n\031GenericPartitionReferen"
      "ce\022\034\n\024generic_partition_id\030\001 \001(\t\"%\n\022Loca"
      "lLinkReference\022\017\n\007link_id\030\001 \001(\r\"%\n\022Local"
      "NodeReference\022\017\n\007node_id\030\001 \001(\r\"@\n\022TiledL"
      "inkReference\022\017\n\007link_id\030\001 \001(\r\022\031\n\021link_he"
      "re_tile_id\030\002 \001(\r\"@\n\022TiledNodeReference\022\017"
      "\n\007node_id\030\001 \001(\r\022\031\n\021node_here_tile_id\030\002 \001"
      "(\r\"Q\n\027TiledLaneGroupReference\022\025\n\rlane_gr"
      "oup_id\030\001 \001(\004\022\037\n\027lane_group_here_tile_id\030"
      "\002 \001(\r\"n\n TiledLaneGroupConnectorReferenc"
      "e\022\037\n\027lane_group_connector_id\030\001 \001(\004\022)\n!la"
      "ne_group_connector_here_tile_id\030\002 \001(\r\"Q\n"
      "\017ParametricRange\022\037\n\027range_offset_from_st"
      "art\030\001 \001(\001\022\035\n\025range_offset_from_end\030\002 \001(\001"
      "\"8\n\022ParametricLocation\022\"\n\032location_offse"
      "t_from_start\030\001 \001(\001\"j\n\037StrandAttributionL"
      "ocalReference\022\037\n\025strand_attribution_id\030\001"
      " \001(\rH\000\022 \n\026strand_attribution_ref\030\002 \001(\tH\000"
      "B\004\n\002id\"\223\001\n\037TiledStrandAttributionReferen"
      "ce\022\037\n\025strand_attribution_id\030\001 \001(\rH\000\022 \n\026s"
      "trand_attribution_ref\030\002 \001(\tH\000\022\'\n\037strand_"
      "attribution_here_tile_id\030\003 \001(\rB\004\n\002id\"L\n "
      "SpecificationComplianceAssertion\022(\n comp"
      "liant_with_specification_ref\030\001 \001(\r\"B\n Lo"
      "calAdministrativeAreaReference\022\036\n\026admini"
      "strative_area_id\030\001 \001(\021\"r\n&PartitionedAdm"
      "inistrativeAreaReference\022\036\n\026administrati"
      "ve_area_id\030\001 \001(\021\022(\n administrative_area_"
      "partition_id\030\002 \001(\t*a\n\021RelativeDirection\022"
      "\035\n\031RelativeDirection_UNKNOWN\020\000\022\010\n\004BOTH\020\001"
      "\022\013\n\007FORWARD\020\002\022\014\n\010BACKWARD\020\003\022\010\n\004NONE\020\004b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1365);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "com/here/pb/hdmap/external/v1/common/common.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto

const ::google::protobuf::EnumDescriptor* RelativeDirection_descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_enum_descriptors[0];
}
bool RelativeDirection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionReference::kHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionReference::PartitionReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
}
PartitionReference::PartitionReference(const PartitionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  here_tile_id_ = from.here_tile_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
}

void PartitionReference::SharedCtor() {
  here_tile_id_ = 0u;
  _cached_size_ = 0;
}

PartitionReference::~PartitionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.PartitionReference)
  SharedDtor();
}

void PartitionReference::SharedDtor() {
}

void PartitionReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartitionReference& PartitionReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

PartitionReference* PartitionReference::New(::google::protobuf::Arena* arena) const {
  PartitionReference* n = new PartitionReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_tile_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PartitionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 here_tile_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return false;
#undef DO_
}

void PartitionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.PartitionReference)
}

::google::protobuf::uint8* PartitionReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.PartitionReference)
  return target;
}

size_t PartitionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 here_tile_id = 1;
  if (this->here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.PartitionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.PartitionReference)
    MergeFrom(*source);
  }
}

void PartitionReference::MergeFrom(const PartitionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_tile_id() != 0) {
    set_here_tile_id(from.here_tile_id());
  }
}

void PartitionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionReference::CopyFrom(const PartitionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionReference::IsInitialized() const {
  return true;
}

void PartitionReference::Swap(PartitionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionReference::InternalSwap(PartitionReference* other) {
  using std::swap;
  swap(here_tile_id_, other->here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartitionReference

// uint32 here_tile_id = 1;
void PartitionReference::clear_here_tile_id() {
  here_tile_id_ = 0u;
}
::google::protobuf::uint32 PartitionReference::here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionReference.here_tile_id)
  return here_tile_id_;
}
void PartitionReference::set_here_tile_id(::google::protobuf::uint32 value) {
  
  here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionReference.here_tile_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenericPartitionReference::kGenericPartitionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenericPartitionReference::GenericPartitionReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}
GenericPartitionReference::GenericPartitionReference(const GenericPartitionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  generic_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.generic_partition_id().size() > 0) {
    generic_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_partition_id_);
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}

void GenericPartitionReference::SharedCtor() {
  generic_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GenericPartitionReference::~GenericPartitionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  SharedDtor();
}

void GenericPartitionReference::SharedDtor() {
  generic_partition_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenericPartitionReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenericPartitionReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenericPartitionReference& GenericPartitionReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

GenericPartitionReference* GenericPartitionReference::New(::google::protobuf::Arena* arena) const {
  GenericPartitionReference* n = new GenericPartitionReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenericPartitionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generic_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenericPartitionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string generic_partition_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_generic_partition_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return false;
#undef DO_
}

void GenericPartitionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->generic_partition_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
}

::google::protobuf::uint8* GenericPartitionReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->generic_partition_id().data(), static_cast<int>(this->generic_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->generic_partition_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  return target;
}

size_t GenericPartitionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string generic_partition_id = 1;
  if (this->generic_partition_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->generic_partition_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenericPartitionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const GenericPartitionReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenericPartitionReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
    MergeFrom(*source);
  }
}

void GenericPartitionReference::MergeFrom(const GenericPartitionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.generic_partition_id().size() > 0) {

    generic_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.generic_partition_id_);
  }
}

void GenericPartitionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenericPartitionReference::CopyFrom(const GenericPartitionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.GenericPartitionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenericPartitionReference::IsInitialized() const {
  return true;
}

void GenericPartitionReference::Swap(GenericPartitionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenericPartitionReference::InternalSwap(GenericPartitionReference* other) {
  using std::swap;
  generic_partition_id_.Swap(&other->generic_partition_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenericPartitionReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenericPartitionReference

// string generic_partition_id = 1;
void GenericPartitionReference::clear_generic_partition_id() {
  generic_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GenericPartitionReference::generic_partition_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  return generic_partition_id_.GetNoArena();
}
void GenericPartitionReference::set_generic_partition_id(const ::std::string& value) {
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
#if LANG_CXX11
void GenericPartitionReference::set_generic_partition_id(::std::string&& value) {
  
  generic_partition_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
#endif
void GenericPartitionReference::set_generic_partition_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
void GenericPartitionReference::set_generic_partition_id(const char* value, size_t size) {
  
  generic_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}
::std::string* GenericPartitionReference::mutable_generic_partition_id() {
  
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  return generic_partition_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenericPartitionReference::release_generic_partition_id() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
  
  return generic_partition_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenericPartitionReference::set_allocated_generic_partition_id(::std::string* generic_partition_id) {
  if (generic_partition_id != NULL) {
    
  } else {
    
  }
  generic_partition_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), generic_partition_id);
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.GenericPartitionReference.generic_partition_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalLinkReference::kLinkIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalLinkReference::LocalLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}
LocalLinkReference::LocalLinkReference(const LocalLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_id_ = from.link_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}

void LocalLinkReference::SharedCtor() {
  link_id_ = 0u;
  _cached_size_ = 0;
}

LocalLinkReference::~LocalLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  SharedDtor();
}

void LocalLinkReference::SharedDtor() {
}

void LocalLinkReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalLinkReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalLinkReference& LocalLinkReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

LocalLinkReference* LocalLinkReference::New(::google::protobuf::Arena* arena) const {
  LocalLinkReference* n = new LocalLinkReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  link_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LocalLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return false;
#undef DO_
}

void LocalLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
}

::google::protobuf::uint8* LocalLinkReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  return target;
}

size_t LocalLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalLinkReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalLinkReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
    MergeFrom(*source);
  }
}

void LocalLinkReference::MergeFrom(const LocalLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link_id() != 0) {
    set_link_id(from.link_id());
  }
}

void LocalLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalLinkReference::CopyFrom(const LocalLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalLinkReference::IsInitialized() const {
  return true;
}

void LocalLinkReference::Swap(LocalLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalLinkReference::InternalSwap(LocalLinkReference* other) {
  using std::swap;
  swap(link_id_, other->link_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalLinkReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalLinkReference

// uint32 link_id = 1;
void LocalLinkReference::clear_link_id() {
  link_id_ = 0u;
}
::google::protobuf::uint32 LocalLinkReference::link_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalLinkReference.link_id)
  return link_id_;
}
void LocalLinkReference::set_link_id(::google::protobuf::uint32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalLinkReference.link_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalNodeReference::kNodeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalNodeReference::LocalNodeReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}
LocalNodeReference::LocalNodeReference(const LocalNodeReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  node_id_ = from.node_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}

void LocalNodeReference::SharedCtor() {
  node_id_ = 0u;
  _cached_size_ = 0;
}

LocalNodeReference::~LocalNodeReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  SharedDtor();
}

void LocalNodeReference::SharedDtor() {
}

void LocalNodeReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalNodeReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalNodeReference& LocalNodeReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

LocalNodeReference* LocalNodeReference::New(::google::protobuf::Arena* arena) const {
  LocalNodeReference* n = new LocalNodeReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalNodeReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_id_ = 0u;
  _internal_metadata_.Clear();
}

bool LocalNodeReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return false;
#undef DO_
}

void LocalNodeReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
}

::google::protobuf::uint8* LocalNodeReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->node_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  return target;
}

size_t LocalNodeReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalNodeReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalNodeReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalNodeReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
    MergeFrom(*source);
  }
}

void LocalNodeReference::MergeFrom(const LocalNodeReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
}

void LocalNodeReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalNodeReference::CopyFrom(const LocalNodeReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalNodeReference::IsInitialized() const {
  return true;
}

void LocalNodeReference::Swap(LocalNodeReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalNodeReference::InternalSwap(LocalNodeReference* other) {
  using std::swap;
  swap(node_id_, other->node_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalNodeReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalNodeReference

// uint32 node_id = 1;
void LocalNodeReference::clear_node_id() {
  node_id_ = 0u;
}
::google::protobuf::uint32 LocalNodeReference::node_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalNodeReference.node_id)
  return node_id_;
}
void LocalNodeReference::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalNodeReference.node_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLinkReference::kLinkIdFieldNumber;
const int TiledLinkReference::kLinkHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLinkReference::TiledLinkReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}
TiledLinkReference::TiledLinkReference(const TiledLinkReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&link_id_, &from.link_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&link_here_tile_id_) -
    reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}

void TiledLinkReference::SharedCtor() {
  ::memset(&link_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_here_tile_id_) -
      reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
  _cached_size_ = 0;
}

TiledLinkReference::~TiledLinkReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  SharedDtor();
}

void TiledLinkReference::SharedDtor() {
}

void TiledLinkReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiledLinkReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TiledLinkReference& TiledLinkReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

TiledLinkReference* TiledLinkReference::New(::google::protobuf::Arena* arena) const {
  TiledLinkReference* n = new TiledLinkReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TiledLinkReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&link_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_here_tile_id_) -
      reinterpret_cast<char*>(&link_id_)) + sizeof(link_here_tile_id_));
  _internal_metadata_.Clear();
}

bool TiledLinkReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 link_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 link_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &link_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return false;
#undef DO_
}

void TiledLinkReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->link_id(), output);
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->link_here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
}

::google::protobuf::uint8* TiledLinkReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->link_id(), target);
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->link_here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  return target;
}

size_t TiledLinkReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 link_id = 1;
  if (this->link_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_id());
  }

  // uint32 link_here_tile_id = 2;
  if (this->link_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->link_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiledLinkReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLinkReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TiledLinkReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
    MergeFrom(*source);
  }
}

void TiledLinkReference::MergeFrom(const TiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.link_id() != 0) {
    set_link_id(from.link_id());
  }
  if (from.link_here_tile_id() != 0) {
    set_link_here_tile_id(from.link_here_tile_id());
  }
}

void TiledLinkReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLinkReference::CopyFrom(const TiledLinkReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLinkReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLinkReference::IsInitialized() const {
  return true;
}

void TiledLinkReference::Swap(TiledLinkReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLinkReference::InternalSwap(TiledLinkReference* other) {
  using std::swap;
  swap(link_id_, other->link_id_);
  swap(link_here_tile_id_, other->link_here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TiledLinkReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TiledLinkReference

// uint32 link_id = 1;
void TiledLinkReference::clear_link_id() {
  link_id_ = 0u;
}
::google::protobuf::uint32 TiledLinkReference::link_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_id)
  return link_id_;
}
void TiledLinkReference::set_link_id(::google::protobuf::uint32 value) {
  
  link_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_id)
}

// uint32 link_here_tile_id = 2;
void TiledLinkReference::clear_link_here_tile_id() {
  link_here_tile_id_ = 0u;
}
::google::protobuf::uint32 TiledLinkReference::link_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_here_tile_id)
  return link_here_tile_id_;
}
void TiledLinkReference::set_link_here_tile_id(::google::protobuf::uint32 value) {
  
  link_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLinkReference.link_here_tile_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledNodeReference::kNodeIdFieldNumber;
const int TiledNodeReference::kNodeHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledNodeReference::TiledNodeReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}
TiledNodeReference::TiledNodeReference(const TiledNodeReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&node_id_, &from.node_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&node_here_tile_id_) -
    reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}

void TiledNodeReference::SharedCtor() {
  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_here_tile_id_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
  _cached_size_ = 0;
}

TiledNodeReference::~TiledNodeReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  SharedDtor();
}

void TiledNodeReference::SharedDtor() {
}

void TiledNodeReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiledNodeReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TiledNodeReference& TiledNodeReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

TiledNodeReference* TiledNodeReference::New(::google::protobuf::Arena* arena) const {
  TiledNodeReference* n = new TiledNodeReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TiledNodeReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&node_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&node_here_tile_id_) -
      reinterpret_cast<char*>(&node_id_)) + sizeof(node_here_tile_id_));
  _internal_metadata_.Clear();
}

bool TiledNodeReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 node_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 node_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &node_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return false;
#undef DO_
}

void TiledNodeReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->node_id(), output);
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->node_here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
}

::google::protobuf::uint8* TiledNodeReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->node_id(), target);
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->node_here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  return target;
}

size_t TiledNodeReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 node_id = 1;
  if (this->node_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_id());
  }

  // uint32 node_here_tile_id = 2;
  if (this->node_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->node_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiledNodeReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledNodeReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TiledNodeReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
    MergeFrom(*source);
  }
}

void TiledNodeReference::MergeFrom(const TiledNodeReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.node_id() != 0) {
    set_node_id(from.node_id());
  }
  if (from.node_here_tile_id() != 0) {
    set_node_here_tile_id(from.node_here_tile_id());
  }
}

void TiledNodeReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledNodeReference::CopyFrom(const TiledNodeReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledNodeReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledNodeReference::IsInitialized() const {
  return true;
}

void TiledNodeReference::Swap(TiledNodeReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledNodeReference::InternalSwap(TiledNodeReference* other) {
  using std::swap;
  swap(node_id_, other->node_id_);
  swap(node_here_tile_id_, other->node_here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TiledNodeReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TiledNodeReference

// uint32 node_id = 1;
void TiledNodeReference::clear_node_id() {
  node_id_ = 0u;
}
::google::protobuf::uint32 TiledNodeReference::node_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_id)
  return node_id_;
}
void TiledNodeReference::set_node_id(::google::protobuf::uint32 value) {
  
  node_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_id)
}

// uint32 node_here_tile_id = 2;
void TiledNodeReference::clear_node_here_tile_id() {
  node_here_tile_id_ = 0u;
}
::google::protobuf::uint32 TiledNodeReference::node_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_here_tile_id)
  return node_here_tile_id_;
}
void TiledNodeReference::set_node_here_tile_id(::google::protobuf::uint32 value) {
  
  node_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledNodeReference.node_here_tile_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLaneGroupReference::kLaneGroupIdFieldNumber;
const int TiledLaneGroupReference::kLaneGroupHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLaneGroupReference::TiledLaneGroupReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}
TiledLaneGroupReference::TiledLaneGroupReference(const TiledLaneGroupReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lane_group_id_, &from.lane_group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_group_here_tile_id_) -
    reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}

void TiledLaneGroupReference::SharedCtor() {
  ::memset(&lane_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
  _cached_size_ = 0;
}

TiledLaneGroupReference::~TiledLaneGroupReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  SharedDtor();
}

void TiledLaneGroupReference::SharedDtor() {
}

void TiledLaneGroupReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiledLaneGroupReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TiledLaneGroupReference& TiledLaneGroupReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

TiledLaneGroupReference* TiledLaneGroupReference::New(::google::protobuf::Arena* arena) const {
  TiledLaneGroupReference* n = new TiledLaneGroupReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TiledLaneGroupReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lane_group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_id_)) + sizeof(lane_group_here_tile_id_));
  _internal_metadata_.Clear();
}

bool TiledLaneGroupReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lane_group_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lane_group_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return false;
#undef DO_
}

void TiledLaneGroupReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_id(), output);
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lane_group_here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
}

::google::protobuf::uint8* TiledLaneGroupReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_id(), target);
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lane_group_here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  return target;
}

size_t TiledLaneGroupReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 lane_group_id = 1;
  if (this->lane_group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_id());
  }

  // uint32 lane_group_here_tile_id = 2;
  if (this->lane_group_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lane_group_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiledLaneGroupReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLaneGroupReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TiledLaneGroupReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
    MergeFrom(*source);
  }
}

void TiledLaneGroupReference::MergeFrom(const TiledLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_group_id() != 0) {
    set_lane_group_id(from.lane_group_id());
  }
  if (from.lane_group_here_tile_id() != 0) {
    set_lane_group_here_tile_id(from.lane_group_here_tile_id());
  }
}

void TiledLaneGroupReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLaneGroupReference::CopyFrom(const TiledLaneGroupReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLaneGroupReference::IsInitialized() const {
  return true;
}

void TiledLaneGroupReference::Swap(TiledLaneGroupReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLaneGroupReference::InternalSwap(TiledLaneGroupReference* other) {
  using std::swap;
  swap(lane_group_id_, other->lane_group_id_);
  swap(lane_group_here_tile_id_, other->lane_group_here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TiledLaneGroupReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TiledLaneGroupReference

// uint64 lane_group_id = 1;
void TiledLaneGroupReference::clear_lane_group_id() {
  lane_group_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TiledLaneGroupReference::lane_group_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_id)
  return lane_group_id_;
}
void TiledLaneGroupReference::set_lane_group_id(::google::protobuf::uint64 value) {
  
  lane_group_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_id)
}

// uint32 lane_group_here_tile_id = 2;
void TiledLaneGroupReference::clear_lane_group_here_tile_id() {
  lane_group_here_tile_id_ = 0u;
}
::google::protobuf::uint32 TiledLaneGroupReference::lane_group_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_here_tile_id)
  return lane_group_here_tile_id_;
}
void TiledLaneGroupReference::set_lane_group_here_tile_id(::google::protobuf::uint32 value) {
  
  lane_group_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupReference.lane_group_here_tile_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledLaneGroupConnectorReference::kLaneGroupConnectorIdFieldNumber;
const int TiledLaneGroupConnectorReference::kLaneGroupConnectorHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledLaneGroupConnectorReference::TiledLaneGroupConnectorReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}
TiledLaneGroupConnectorReference::TiledLaneGroupConnectorReference(const TiledLaneGroupConnectorReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lane_group_connector_id_, &from.lane_group_connector_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
    reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}

void TiledLaneGroupConnectorReference::SharedCtor() {
  ::memset(&lane_group_connector_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
  _cached_size_ = 0;
}

TiledLaneGroupConnectorReference::~TiledLaneGroupConnectorReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  SharedDtor();
}

void TiledLaneGroupConnectorReference::SharedDtor() {
}

void TiledLaneGroupConnectorReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiledLaneGroupConnectorReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TiledLaneGroupConnectorReference& TiledLaneGroupConnectorReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

TiledLaneGroupConnectorReference* TiledLaneGroupConnectorReference::New(::google::protobuf::Arena* arena) const {
  TiledLaneGroupConnectorReference* n = new TiledLaneGroupConnectorReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TiledLaneGroupConnectorReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lane_group_connector_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lane_group_connector_here_tile_id_) -
      reinterpret_cast<char*>(&lane_group_connector_id_)) + sizeof(lane_group_connector_here_tile_id_));
  _internal_metadata_.Clear();
}

bool TiledLaneGroupConnectorReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 lane_group_connector_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &lane_group_connector_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lane_group_connector_here_tile_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lane_group_connector_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return false;
#undef DO_
}

void TiledLaneGroupConnectorReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->lane_group_connector_id(), output);
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lane_group_connector_here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
}

::google::protobuf::uint8* TiledLaneGroupConnectorReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->lane_group_connector_id(), target);
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lane_group_connector_here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  return target;
}

size_t TiledLaneGroupConnectorReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 lane_group_connector_id = 1;
  if (this->lane_group_connector_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->lane_group_connector_id());
  }

  // uint32 lane_group_connector_here_tile_id = 2;
  if (this->lane_group_connector_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lane_group_connector_here_tile_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiledLaneGroupConnectorReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledLaneGroupConnectorReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TiledLaneGroupConnectorReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
    MergeFrom(*source);
  }
}

void TiledLaneGroupConnectorReference::MergeFrom(const TiledLaneGroupConnectorReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lane_group_connector_id() != 0) {
    set_lane_group_connector_id(from.lane_group_connector_id());
  }
  if (from.lane_group_connector_here_tile_id() != 0) {
    set_lane_group_connector_here_tile_id(from.lane_group_connector_here_tile_id());
  }
}

void TiledLaneGroupConnectorReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledLaneGroupConnectorReference::CopyFrom(const TiledLaneGroupConnectorReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledLaneGroupConnectorReference::IsInitialized() const {
  return true;
}

void TiledLaneGroupConnectorReference::Swap(TiledLaneGroupConnectorReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledLaneGroupConnectorReference::InternalSwap(TiledLaneGroupConnectorReference* other) {
  using std::swap;
  swap(lane_group_connector_id_, other->lane_group_connector_id_);
  swap(lane_group_connector_here_tile_id_, other->lane_group_connector_here_tile_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TiledLaneGroupConnectorReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TiledLaneGroupConnectorReference

// uint64 lane_group_connector_id = 1;
void TiledLaneGroupConnectorReference::clear_lane_group_connector_id() {
  lane_group_connector_id_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TiledLaneGroupConnectorReference::lane_group_connector_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_id)
  return lane_group_connector_id_;
}
void TiledLaneGroupConnectorReference::set_lane_group_connector_id(::google::protobuf::uint64 value) {
  
  lane_group_connector_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_id)
}

// uint32 lane_group_connector_here_tile_id = 2;
void TiledLaneGroupConnectorReference::clear_lane_group_connector_here_tile_id() {
  lane_group_connector_here_tile_id_ = 0u;
}
::google::protobuf::uint32 TiledLaneGroupConnectorReference::lane_group_connector_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_here_tile_id)
  return lane_group_connector_here_tile_id_;
}
void TiledLaneGroupConnectorReference::set_lane_group_connector_here_tile_id(::google::protobuf::uint32 value) {
  
  lane_group_connector_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledLaneGroupConnectorReference.lane_group_connector_here_tile_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricRange::kRangeOffsetFromStartFieldNumber;
const int ParametricRange::kRangeOffsetFromEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricRange::ParametricRange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
}
ParametricRange::ParametricRange(const ParametricRange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&range_offset_from_start_, &from.range_offset_from_start_,
    static_cast<size_t>(reinterpret_cast<char*>(&range_offset_from_end_) -
    reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
}

void ParametricRange::SharedCtor() {
  ::memset(&range_offset_from_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_offset_from_end_) -
      reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
  _cached_size_ = 0;
}

ParametricRange::~ParametricRange() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.ParametricRange)
  SharedDtor();
}

void ParametricRange::SharedDtor() {
}

void ParametricRange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParametricRange::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParametricRange& ParametricRange::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParametricRange* ParametricRange::New(::google::protobuf::Arena* arena) const {
  ParametricRange* n = new ParametricRange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParametricRange::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&range_offset_from_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&range_offset_from_end_) -
      reinterpret_cast<char*>(&range_offset_from_start_)) + sizeof(range_offset_from_end_));
  _internal_metadata_.Clear();
}

bool ParametricRange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double range_offset_from_start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_offset_from_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double range_offset_from_end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &range_offset_from_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return false;
#undef DO_
}

void ParametricRange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->range_offset_from_start(), output);
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->range_offset_from_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.ParametricRange)
}

::google::protobuf::uint8* ParametricRange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->range_offset_from_start(), target);
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->range_offset_from_end(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.ParametricRange)
  return target;
}

size_t ParametricRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double range_offset_from_start = 1;
  if (this->range_offset_from_start() != 0) {
    total_size += 1 + 8;
  }

  // double range_offset_from_end = 2;
  if (this->range_offset_from_end() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParametricRange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricRange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParametricRange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.ParametricRange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.ParametricRange)
    MergeFrom(*source);
  }
}

void ParametricRange::MergeFrom(const ParametricRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.range_offset_from_start() != 0) {
    set_range_offset_from_start(from.range_offset_from_start());
  }
  if (from.range_offset_from_end() != 0) {
    set_range_offset_from_end(from.range_offset_from_end());
  }
}

void ParametricRange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricRange::CopyFrom(const ParametricRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricRange::IsInitialized() const {
  return true;
}

void ParametricRange::Swap(ParametricRange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricRange::InternalSwap(ParametricRange* other) {
  using std::swap;
  swap(range_offset_from_start_, other->range_offset_from_start_);
  swap(range_offset_from_end_, other->range_offset_from_end_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParametricRange::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParametricRange

// double range_offset_from_start = 1;
void ParametricRange::clear_range_offset_from_start() {
  range_offset_from_start_ = 0;
}
double ParametricRange::range_offset_from_start() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_start)
  return range_offset_from_start_;
}
void ParametricRange::set_range_offset_from_start(double value) {
  
  range_offset_from_start_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_start)
}

// double range_offset_from_end = 2;
void ParametricRange::clear_range_offset_from_end() {
  range_offset_from_end_ = 0;
}
double ParametricRange::range_offset_from_end() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_end)
  return range_offset_from_end_;
}
void ParametricRange::set_range_offset_from_end(double value) {
  
  range_offset_from_end_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricRange.range_offset_from_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParametricLocation::kLocationOffsetFromStartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParametricLocation::ParametricLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}
ParametricLocation::ParametricLocation(const ParametricLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_offset_from_start_ = from.location_offset_from_start_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}

void ParametricLocation::SharedCtor() {
  location_offset_from_start_ = 0;
  _cached_size_ = 0;
}

ParametricLocation::~ParametricLocation() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  SharedDtor();
}

void ParametricLocation::SharedDtor() {
}

void ParametricLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParametricLocation::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParametricLocation& ParametricLocation::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParametricLocation* ParametricLocation::New(::google::protobuf::Arena* arena) const {
  ParametricLocation* n = new ParametricLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParametricLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  location_offset_from_start_ = 0;
  _internal_metadata_.Clear();
}

bool ParametricLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double location_offset_from_start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &location_offset_from_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return false;
#undef DO_
}

void ParametricLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->location_offset_from_start(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.ParametricLocation)
}

::google::protobuf::uint8* ParametricLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->location_offset_from_start(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  return target;
}

size_t ParametricLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double location_offset_from_start = 1;
  if (this->location_offset_from_start() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParametricLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const ParametricLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParametricLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.ParametricLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.ParametricLocation)
    MergeFrom(*source);
  }
}

void ParametricLocation::MergeFrom(const ParametricLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.location_offset_from_start() != 0) {
    set_location_offset_from_start(from.location_offset_from_start());
  }
}

void ParametricLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParametricLocation::CopyFrom(const ParametricLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.ParametricLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParametricLocation::IsInitialized() const {
  return true;
}

void ParametricLocation::Swap(ParametricLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParametricLocation::InternalSwap(ParametricLocation* other) {
  using std::swap;
  swap(location_offset_from_start_, other->location_offset_from_start_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParametricLocation::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParametricLocation

// double location_offset_from_start = 1;
void ParametricLocation::clear_location_offset_from_start() {
  location_offset_from_start_ = 0;
}
double ParametricLocation::location_offset_from_start() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.ParametricLocation.location_offset_from_start)
  return location_offset_from_start_;
}
void ParametricLocation::set_location_offset_from_start(double value) {
  
  location_offset_from_start_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.ParametricLocation.location_offset_from_start)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StrandAttributionLocalReference::kStrandAttributionIdFieldNumber;
const int StrandAttributionLocalReference::kStrandAttributionRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StrandAttributionLocalReference::StrandAttributionLocalReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}
StrandAttributionLocalReference::StrandAttributionLocalReference(const StrandAttributionLocalReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_id();
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}

void StrandAttributionLocalReference::SharedCtor() {
  clear_has_id();
  _cached_size_ = 0;
}

StrandAttributionLocalReference::~StrandAttributionLocalReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  SharedDtor();
}

void StrandAttributionLocalReference::SharedDtor() {
  if (has_id()) {
    clear_id();
  }
}

void StrandAttributionLocalReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StrandAttributionLocalReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StrandAttributionLocalReference& StrandAttributionLocalReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

StrandAttributionLocalReference* StrandAttributionLocalReference::New(::google::protobuf::Arena* arena) const {
  StrandAttributionLocalReference* n = new StrandAttributionLocalReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StrandAttributionLocalReference::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  switch (id_case()) {
    case kStrandAttributionId: {
      // No need to clear
      break;
    }
    case kStrandAttributionRef: {
      id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void StrandAttributionLocalReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id();
  _internal_metadata_.Clear();
}

bool StrandAttributionLocalReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_.strand_attribution_id_)));
          set_has_strand_attribution_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strand_attribution_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return false;
#undef DO_
}

void StrandAttributionLocalReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->strand_attribution_id(), output);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strand_attribution_ref(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
}

::google::protobuf::uint8* StrandAttributionLocalReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->strand_attribution_id(), target);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strand_attribution_ref(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  return target;
}

size_t StrandAttributionLocalReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (id_case()) {
    // uint32 strand_attribution_id = 1;
    case kStrandAttributionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strand_attribution_id());
      break;
    }
    // string strand_attribution_ref = 2;
    case kStrandAttributionRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StrandAttributionLocalReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  GOOGLE_DCHECK_NE(&from, this);
  const StrandAttributionLocalReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StrandAttributionLocalReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
    MergeFrom(*source);
  }
}

void StrandAttributionLocalReference::MergeFrom(const StrandAttributionLocalReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void StrandAttributionLocalReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StrandAttributionLocalReference::CopyFrom(const StrandAttributionLocalReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StrandAttributionLocalReference::IsInitialized() const {
  return true;
}

void StrandAttributionLocalReference::Swap(StrandAttributionLocalReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StrandAttributionLocalReference::InternalSwap(StrandAttributionLocalReference* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StrandAttributionLocalReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StrandAttributionLocalReference

// uint32 strand_attribution_id = 1;
bool StrandAttributionLocalReference::has_strand_attribution_id() const {
  return id_case() == kStrandAttributionId;
}
void StrandAttributionLocalReference::set_has_strand_attribution_id() {
  _oneof_case_[0] = kStrandAttributionId;
}
void StrandAttributionLocalReference::clear_strand_attribution_id() {
  if (has_strand_attribution_id()) {
    id_.strand_attribution_id_ = 0u;
    clear_has_id();
  }
}
::google::protobuf::uint32 StrandAttributionLocalReference::strand_attribution_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_id)
  if (has_strand_attribution_id()) {
    return id_.strand_attribution_id_;
  }
  return 0u;
}
void StrandAttributionLocalReference::set_strand_attribution_id(::google::protobuf::uint32 value) {
  if (!has_strand_attribution_id()) {
    clear_id();
    set_has_strand_attribution_id();
  }
  id_.strand_attribution_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_id)
}

// string strand_attribution_ref = 2;
bool StrandAttributionLocalReference::has_strand_attribution_ref() const {
  return id_case() == kStrandAttributionRef;
}
void StrandAttributionLocalReference::set_has_strand_attribution_ref() {
  _oneof_case_[0] = kStrandAttributionRef;
}
void StrandAttributionLocalReference::clear_strand_attribution_ref() {
  if (has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
  }
}
const ::std::string& StrandAttributionLocalReference::strand_attribution_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    return id_.strand_attribution_ref_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void StrandAttributionLocalReference::set_strand_attribution_ref(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
#if LANG_CXX11
void StrandAttributionLocalReference::set_strand_attribution_ref(::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
#endif
void StrandAttributionLocalReference::set_strand_attribution_ref(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
void StrandAttributionLocalReference::set_strand_attribution_ref(const char* value, size_t size) {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}
::std::string* StrandAttributionLocalReference::mutable_strand_attribution_ref() {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  return id_.strand_attribution_ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StrandAttributionLocalReference::release_strand_attribution_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    clear_has_id();
    return id_.strand_attribution_ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void StrandAttributionLocalReference::set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref) {
  if (!has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_id();
  if (strand_attribution_ref != NULL) {
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        strand_attribution_ref);
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.StrandAttributionLocalReference.strand_attribution_ref)
}

bool StrandAttributionLocalReference::has_id() const {
  return id_case() != ID_NOT_SET;
}
void StrandAttributionLocalReference::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
StrandAttributionLocalReference::IdCase StrandAttributionLocalReference::id_case() const {
  return StrandAttributionLocalReference::IdCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TiledStrandAttributionReference::kStrandAttributionIdFieldNumber;
const int TiledStrandAttributionReference::kStrandAttributionRefFieldNumber;
const int TiledStrandAttributionReference::kStrandAttributionHereTileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TiledStrandAttributionReference::TiledStrandAttributionReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}
TiledStrandAttributionReference::TiledStrandAttributionReference(const TiledStrandAttributionReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strand_attribution_here_tile_id_ = from.strand_attribution_here_tile_id_;
  clear_has_id();
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}

void TiledStrandAttributionReference::SharedCtor() {
  strand_attribution_here_tile_id_ = 0u;
  clear_has_id();
  _cached_size_ = 0;
}

TiledStrandAttributionReference::~TiledStrandAttributionReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  SharedDtor();
}

void TiledStrandAttributionReference::SharedDtor() {
  if (has_id()) {
    clear_id();
  }
}

void TiledStrandAttributionReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiledStrandAttributionReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TiledStrandAttributionReference& TiledStrandAttributionReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

TiledStrandAttributionReference* TiledStrandAttributionReference::New(::google::protobuf::Arena* arena) const {
  TiledStrandAttributionReference* n = new TiledStrandAttributionReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TiledStrandAttributionReference::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  switch (id_case()) {
    case kStrandAttributionId: {
      // No need to clear
      break;
    }
    case kStrandAttributionRef: {
      id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ID_NOT_SET;
}


void TiledStrandAttributionReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strand_attribution_here_tile_id_ = 0u;
  clear_id();
  _internal_metadata_.Clear();
}

bool TiledStrandAttributionReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 strand_attribution_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_.strand_attribution_id_)));
          set_has_strand_attribution_id();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string strand_attribution_ref = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strand_attribution_ref()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 strand_attribution_here_tile_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strand_attribution_here_tile_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return false;
#undef DO_
}

void TiledStrandAttributionReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->strand_attribution_id(), output);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strand_attribution_ref(), output);
  }

  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strand_attribution_here_tile_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
}

::google::protobuf::uint8* TiledStrandAttributionReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 strand_attribution_id = 1;
  if (has_strand_attribution_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->strand_attribution_id(), target);
  }

  // string strand_attribution_ref = 2;
  if (has_strand_attribution_ref()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->strand_attribution_ref().data(), static_cast<int>(this->strand_attribution_ref().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strand_attribution_ref(), target);
  }

  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strand_attribution_here_tile_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  return target;
}

size_t TiledStrandAttributionReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 strand_attribution_here_tile_id = 3;
  if (this->strand_attribution_here_tile_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->strand_attribution_here_tile_id());
  }

  switch (id_case()) {
    // uint32 strand_attribution_id = 1;
    case kStrandAttributionId: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strand_attribution_id());
      break;
    }
    // string strand_attribution_ref = 2;
    case kStrandAttributionRef: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiledStrandAttributionReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  GOOGLE_DCHECK_NE(&from, this);
  const TiledStrandAttributionReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TiledStrandAttributionReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
    MergeFrom(*source);
  }
}

void TiledStrandAttributionReference::MergeFrom(const TiledStrandAttributionReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.strand_attribution_here_tile_id() != 0) {
    set_strand_attribution_here_tile_id(from.strand_attribution_here_tile_id());
  }
  switch (from.id_case()) {
    case kStrandAttributionId: {
      set_strand_attribution_id(from.strand_attribution_id());
      break;
    }
    case kStrandAttributionRef: {
      set_strand_attribution_ref(from.strand_attribution_ref());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
}

void TiledStrandAttributionReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiledStrandAttributionReference::CopyFrom(const TiledStrandAttributionReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiledStrandAttributionReference::IsInitialized() const {
  return true;
}

void TiledStrandAttributionReference::Swap(TiledStrandAttributionReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TiledStrandAttributionReference::InternalSwap(TiledStrandAttributionReference* other) {
  using std::swap;
  swap(strand_attribution_here_tile_id_, other->strand_attribution_here_tile_id_);
  swap(id_, other->id_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TiledStrandAttributionReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TiledStrandAttributionReference

// uint32 strand_attribution_id = 1;
bool TiledStrandAttributionReference::has_strand_attribution_id() const {
  return id_case() == kStrandAttributionId;
}
void TiledStrandAttributionReference::set_has_strand_attribution_id() {
  _oneof_case_[0] = kStrandAttributionId;
}
void TiledStrandAttributionReference::clear_strand_attribution_id() {
  if (has_strand_attribution_id()) {
    id_.strand_attribution_id_ = 0u;
    clear_has_id();
  }
}
::google::protobuf::uint32 TiledStrandAttributionReference::strand_attribution_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_id)
  if (has_strand_attribution_id()) {
    return id_.strand_attribution_id_;
  }
  return 0u;
}
void TiledStrandAttributionReference::set_strand_attribution_id(::google::protobuf::uint32 value) {
  if (!has_strand_attribution_id()) {
    clear_id();
    set_has_strand_attribution_id();
  }
  id_.strand_attribution_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_id)
}

// string strand_attribution_ref = 2;
bool TiledStrandAttributionReference::has_strand_attribution_ref() const {
  return id_case() == kStrandAttributionRef;
}
void TiledStrandAttributionReference::set_has_strand_attribution_ref() {
  _oneof_case_[0] = kStrandAttributionRef;
}
void TiledStrandAttributionReference::clear_strand_attribution_ref() {
  if (has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_id();
  }
}
const ::std::string& TiledStrandAttributionReference::strand_attribution_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    return id_.strand_attribution_ref_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TiledStrandAttributionReference::set_strand_attribution_ref(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
#if LANG_CXX11
void TiledStrandAttributionReference::set_strand_attribution_ref(::std::string&& value) {
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
#endif
void TiledStrandAttributionReference::set_strand_attribution_ref(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
void TiledStrandAttributionReference::set_strand_attribution_ref(const char* value, size_t size) {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  id_.strand_attribution_ref_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}
::std::string* TiledStrandAttributionReference::mutable_strand_attribution_ref() {
  if (!has_strand_attribution_ref()) {
    clear_id();
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  return id_.strand_attribution_ref_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TiledStrandAttributionReference::release_strand_attribution_ref() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
  if (has_strand_attribution_ref()) {
    clear_has_id();
    return id_.strand_attribution_ref_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TiledStrandAttributionReference::set_allocated_strand_attribution_ref(::std::string* strand_attribution_ref) {
  if (!has_strand_attribution_ref()) {
    id_.strand_attribution_ref_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_id();
  if (strand_attribution_ref != NULL) {
    set_has_strand_attribution_ref();
    id_.strand_attribution_ref_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        strand_attribution_ref);
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_ref)
}

// uint32 strand_attribution_here_tile_id = 3;
void TiledStrandAttributionReference::clear_strand_attribution_here_tile_id() {
  strand_attribution_here_tile_id_ = 0u;
}
::google::protobuf::uint32 TiledStrandAttributionReference::strand_attribution_here_tile_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_here_tile_id)
  return strand_attribution_here_tile_id_;
}
void TiledStrandAttributionReference::set_strand_attribution_here_tile_id(::google::protobuf::uint32 value) {
  
  strand_attribution_here_tile_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.TiledStrandAttributionReference.strand_attribution_here_tile_id)
}

bool TiledStrandAttributionReference::has_id() const {
  return id_case() != ID_NOT_SET;
}
void TiledStrandAttributionReference::clear_has_id() {
  _oneof_case_[0] = ID_NOT_SET;
}
TiledStrandAttributionReference::IdCase TiledStrandAttributionReference::id_case() const {
  return TiledStrandAttributionReference::IdCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpecificationComplianceAssertion::kCompliantWithSpecificationRefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpecificationComplianceAssertion::SpecificationComplianceAssertion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}
SpecificationComplianceAssertion::SpecificationComplianceAssertion(const SpecificationComplianceAssertion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  compliant_with_specification_ref_ = from.compliant_with_specification_ref_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}

void SpecificationComplianceAssertion::SharedCtor() {
  compliant_with_specification_ref_ = 0u;
  _cached_size_ = 0;
}

SpecificationComplianceAssertion::~SpecificationComplianceAssertion() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  SharedDtor();
}

void SpecificationComplianceAssertion::SharedDtor() {
}

void SpecificationComplianceAssertion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpecificationComplianceAssertion::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpecificationComplianceAssertion& SpecificationComplianceAssertion::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

SpecificationComplianceAssertion* SpecificationComplianceAssertion::New(::google::protobuf::Arena* arena) const {
  SpecificationComplianceAssertion* n = new SpecificationComplianceAssertion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpecificationComplianceAssertion::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  compliant_with_specification_ref_ = 0u;
  _internal_metadata_.Clear();
}

bool SpecificationComplianceAssertion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 compliant_with_specification_ref = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &compliant_with_specification_ref_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return false;
#undef DO_
}

void SpecificationComplianceAssertion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->compliant_with_specification_ref(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
}

::google::protobuf::uint8* SpecificationComplianceAssertion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->compliant_with_specification_ref(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  return target;
}

size_t SpecificationComplianceAssertion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 compliant_with_specification_ref = 1;
  if (this->compliant_with_specification_ref() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->compliant_with_specification_ref());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpecificationComplianceAssertion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  GOOGLE_DCHECK_NE(&from, this);
  const SpecificationComplianceAssertion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpecificationComplianceAssertion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
    MergeFrom(*source);
  }
}

void SpecificationComplianceAssertion::MergeFrom(const SpecificationComplianceAssertion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.compliant_with_specification_ref() != 0) {
    set_compliant_with_specification_ref(from.compliant_with_specification_ref());
  }
}

void SpecificationComplianceAssertion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpecificationComplianceAssertion::CopyFrom(const SpecificationComplianceAssertion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpecificationComplianceAssertion::IsInitialized() const {
  return true;
}

void SpecificationComplianceAssertion::Swap(SpecificationComplianceAssertion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpecificationComplianceAssertion::InternalSwap(SpecificationComplianceAssertion* other) {
  using std::swap;
  swap(compliant_with_specification_ref_, other->compliant_with_specification_ref_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpecificationComplianceAssertion::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpecificationComplianceAssertion

// uint32 compliant_with_specification_ref = 1;
void SpecificationComplianceAssertion::clear_compliant_with_specification_ref() {
  compliant_with_specification_ref_ = 0u;
}
::google::protobuf::uint32 SpecificationComplianceAssertion::compliant_with_specification_ref() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion.compliant_with_specification_ref)
  return compliant_with_specification_ref_;
}
void SpecificationComplianceAssertion::set_compliant_with_specification_ref(::google::protobuf::uint32 value) {
  
  compliant_with_specification_ref_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.SpecificationComplianceAssertion.compliant_with_specification_ref)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalAdministrativeAreaReference::kAdministrativeAreaIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalAdministrativeAreaReference::LocalAdministrativeAreaReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}
LocalAdministrativeAreaReference::LocalAdministrativeAreaReference(const LocalAdministrativeAreaReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  administrative_area_id_ = from.administrative_area_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}

void LocalAdministrativeAreaReference::SharedCtor() {
  administrative_area_id_ = 0;
  _cached_size_ = 0;
}

LocalAdministrativeAreaReference::~LocalAdministrativeAreaReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  SharedDtor();
}

void LocalAdministrativeAreaReference::SharedDtor() {
}

void LocalAdministrativeAreaReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalAdministrativeAreaReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalAdministrativeAreaReference& LocalAdministrativeAreaReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

LocalAdministrativeAreaReference* LocalAdministrativeAreaReference::New(::google::protobuf::Arena* arena) const {
  LocalAdministrativeAreaReference* n = new LocalAdministrativeAreaReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalAdministrativeAreaReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administrative_area_id_ = 0;
  _internal_metadata_.Clear();
}

bool LocalAdministrativeAreaReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &administrative_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return false;
#undef DO_
}

void LocalAdministrativeAreaReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->administrative_area_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
}

::google::protobuf::uint8* LocalAdministrativeAreaReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->administrative_area_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  return target;
}

size_t LocalAdministrativeAreaReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->administrative_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalAdministrativeAreaReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalAdministrativeAreaReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalAdministrativeAreaReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
    MergeFrom(*source);
  }
}

void LocalAdministrativeAreaReference::MergeFrom(const LocalAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.administrative_area_id() != 0) {
    set_administrative_area_id(from.administrative_area_id());
  }
}

void LocalAdministrativeAreaReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalAdministrativeAreaReference::CopyFrom(const LocalAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalAdministrativeAreaReference::IsInitialized() const {
  return true;
}

void LocalAdministrativeAreaReference::Swap(LocalAdministrativeAreaReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalAdministrativeAreaReference::InternalSwap(LocalAdministrativeAreaReference* other) {
  using std::swap;
  swap(administrative_area_id_, other->administrative_area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalAdministrativeAreaReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LocalAdministrativeAreaReference

// sint32 administrative_area_id = 1;
void LocalAdministrativeAreaReference::clear_administrative_area_id() {
  administrative_area_id_ = 0;
}
::google::protobuf::int32 LocalAdministrativeAreaReference::administrative_area_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference.administrative_area_id)
  return administrative_area_id_;
}
void LocalAdministrativeAreaReference::set_administrative_area_id(::google::protobuf::int32 value) {
  
  administrative_area_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.LocalAdministrativeAreaReference.administrative_area_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PartitionedAdministrativeAreaReference::kAdministrativeAreaIdFieldNumber;
const int PartitionedAdministrativeAreaReference::kAdministrativeAreaPartitionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PartitionedAdministrativeAreaReference::PartitionedAdministrativeAreaReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}
PartitionedAdministrativeAreaReference::PartitionedAdministrativeAreaReference(const PartitionedAdministrativeAreaReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  administrative_area_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.administrative_area_partition_id().size() > 0) {
    administrative_area_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.administrative_area_partition_id_);
  }
  administrative_area_id_ = from.administrative_area_id_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}

void PartitionedAdministrativeAreaReference::SharedCtor() {
  administrative_area_partition_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  administrative_area_id_ = 0;
  _cached_size_ = 0;
}

PartitionedAdministrativeAreaReference::~PartitionedAdministrativeAreaReference() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  SharedDtor();
}

void PartitionedAdministrativeAreaReference::SharedDtor() {
  administrative_area_partition_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PartitionedAdministrativeAreaReference::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PartitionedAdministrativeAreaReference::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PartitionedAdministrativeAreaReference& PartitionedAdministrativeAreaReference::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::InitDefaults();
  return *internal_default_instance();
}

PartitionedAdministrativeAreaReference* PartitionedAdministrativeAreaReference::New(::google::protobuf::Arena* arena) const {
  PartitionedAdministrativeAreaReference* n = new PartitionedAdministrativeAreaReference;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PartitionedAdministrativeAreaReference::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  administrative_area_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  administrative_area_id_ = 0;
  _internal_metadata_.Clear();
}

bool PartitionedAdministrativeAreaReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 administrative_area_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &administrative_area_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string administrative_area_partition_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_administrative_area_partition_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return false;
#undef DO_
}

void PartitionedAdministrativeAreaReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->administrative_area_id(), output);
  }

  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->administrative_area_partition_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
}

::google::protobuf::uint8* PartitionedAdministrativeAreaReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->administrative_area_id(), target);
  }

  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->administrative_area_partition_id().data(), static_cast<int>(this->administrative_area_partition_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->administrative_area_partition_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  return target;
}

size_t PartitionedAdministrativeAreaReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string administrative_area_partition_id = 2;
  if (this->administrative_area_partition_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->administrative_area_partition_id());
  }

  // sint32 administrative_area_id = 1;
  if (this->administrative_area_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->administrative_area_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PartitionedAdministrativeAreaReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PartitionedAdministrativeAreaReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PartitionedAdministrativeAreaReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
    MergeFrom(*source);
  }
}

void PartitionedAdministrativeAreaReference::MergeFrom(const PartitionedAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.administrative_area_partition_id().size() > 0) {

    administrative_area_partition_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.administrative_area_partition_id_);
  }
  if (from.administrative_area_id() != 0) {
    set_administrative_area_id(from.administrative_area_id());
  }
}

void PartitionedAdministrativeAreaReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PartitionedAdministrativeAreaReference::CopyFrom(const PartitionedAdministrativeAreaReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartitionedAdministrativeAreaReference::IsInitialized() const {
  return true;
}

void PartitionedAdministrativeAreaReference::Swap(PartitionedAdministrativeAreaReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PartitionedAdministrativeAreaReference::InternalSwap(PartitionedAdministrativeAreaReference* other) {
  using std::swap;
  administrative_area_partition_id_.Swap(&other->administrative_area_partition_id_);
  swap(administrative_area_id_, other->administrative_area_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PartitionedAdministrativeAreaReference::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fcommon_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PartitionedAdministrativeAreaReference

// sint32 administrative_area_id = 1;
void PartitionedAdministrativeAreaReference::clear_administrative_area_id() {
  administrative_area_id_ = 0;
}
::google::protobuf::int32 PartitionedAdministrativeAreaReference::administrative_area_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_id)
  return administrative_area_id_;
}
void PartitionedAdministrativeAreaReference::set_administrative_area_id(::google::protobuf::int32 value) {
  
  administrative_area_id_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_id)
}

// string administrative_area_partition_id = 2;
void PartitionedAdministrativeAreaReference::clear_administrative_area_partition_id() {
  administrative_area_partition_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PartitionedAdministrativeAreaReference::administrative_area_partition_id() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  return administrative_area_partition_id_.GetNoArena();
}
void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const ::std::string& value) {
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
#if LANG_CXX11
void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(::std::string&& value) {
  
  administrative_area_partition_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
#endif
void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
void PartitionedAdministrativeAreaReference::set_administrative_area_partition_id(const char* value, size_t size) {
  
  administrative_area_partition_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}
::std::string* PartitionedAdministrativeAreaReference::mutable_administrative_area_partition_id() {
  
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  return administrative_area_partition_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PartitionedAdministrativeAreaReference::release_administrative_area_partition_id() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
  
  return administrative_area_partition_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PartitionedAdministrativeAreaReference::set_allocated_administrative_area_partition_id(::std::string* administrative_area_partition_id) {
  if (administrative_area_partition_id != NULL) {
    
  } else {
    
  }
  administrative_area_partition_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), administrative_area_partition_id);
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.common.PartitionedAdministrativeAreaReference.administrative_area_partition_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

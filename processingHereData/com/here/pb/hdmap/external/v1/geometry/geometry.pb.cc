// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/geometry/geometry.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "com/here/pb/hdmap/external/v1/geometry/geometry.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace geometry {
class Point2dDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Point2d>
     _instance;
} _Point2d_default_instance_;
class Point3dDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Point3d>
     _instance;
} _Point3d_default_instance_;
class LineString2dOffsetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LineString2dOffset>
     _instance;
} _LineString2dOffset_default_instance_;
class LineString3dOffsetDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LineString3dOffset>
     _instance;
} _LineString3dOffset_default_instance_;
class ElevationMeasureDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ElevationMeasure>
     _instance;
} _ElevationMeasure_default_instance_;
class ZLevelIndexDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ZLevelIndex>
     _instance;
} _ZLevelIndex_default_instance_;
class OrientedRectangle3dDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OrientedRectangle3d>
     _instance;
} _OrientedRectangle3d_default_instance_;

namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[7];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2d, here_2d_coordinate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point2d, z_level_index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3d, here_2d_coordinate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Point3d, cm_from_wgs84_ellipsoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString2dOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString2dOffset, here_2d_coordinate_diffs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString2dOffset, z_level_indexes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString3dOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString3dOffset, here_2d_coordinate_diffs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LineString3dOffset, cm_from_wgs84_ellipsoid_diffs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ElevationMeasure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ElevationMeasure, cm_from_wgs84_ellipsoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLevelIndex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ZLevelIndex, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrientedRectangle3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrientedRectangle3d, center_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrientedRectangle3d, height_in_cm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrientedRectangle3d, width_in_cm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrientedRectangle3d, bearing_in_degrees_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Point2d)},
  { 7, -1, sizeof(Point3d)},
  { 14, -1, sizeof(LineString2dOffset)},
  { 21, -1, sizeof(LineString3dOffset)},
  { 28, -1, sizeof(ElevationMeasure)},
  { 34, -1, sizeof(ZLevelIndex)},
  { 40, -1, sizeof(OrientedRectangle3d)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point2d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Point3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LineString2dOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LineString3dOffset_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ElevationMeasure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ZLevelIndex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrientedRectangle3d_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "com/here/pb/hdmap/external/v1/geometry/geometry.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Point2d_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Point2d_default_instance_);_Point3d_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Point3d_default_instance_);_LineString2dOffset_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LineString2dOffset_default_instance_);_LineString3dOffset_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LineString3dOffset_default_instance_);_ElevationMeasure_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ElevationMeasure_default_instance_);_ZLevelIndex_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ZLevelIndex_default_instance_);_OrientedRectangle3d_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OrientedRectangle3d_default_instance_);_OrientedRectangle3d_default_instance_._instance.get_mutable()->center_point_ = const_cast< ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      ::com::here::pb::hdmap::external::v1::geometry::Point3d::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n5com/here/pb/hdmap/external/v1/geometry"
      "/geometry.proto\022&com.here.pb.hdmap.exter"
      "nal.v1.geometry\"<\n\007Point2d\022\032\n\022here_2d_co"
      "ordinate\030\001 \001(\022\022\025\n\rz_level_index\030\002 \001(\021\"F\n"
      "\007Point3d\022\032\n\022here_2d_coordinate\030\001 \001(\022\022\037\n\027"
      "cm_from_WGS84_ellipsoid\030\002 \001(\021\"W\n\022LineStr"
      "ing2dOffset\022$\n\030here_2d_coordinate_diffs\030"
      "\001 \003(\022B\002\020\001\022\033\n\017z_level_indexes\030\002 \003(\021B\002\020\001\"e"
      "\n\022LineString3dOffset\022$\n\030here_2d_coordina"
      "te_diffs\030\001 \003(\022B\002\020\001\022)\n\035cm_from_WGS84_elli"
      "psoid_diffs\030\002 \003(\021B\002\020\001\"3\n\020ElevationMeasur"
      "e\022\037\n\027cm_from_WGS84_ellipsoid\030\001 \001(\021\"\034\n\013ZL"
      "evelIndex\022\r\n\005index\030\001 \001(\021\"\243\001\n\023OrientedRec"
      "tangle3d\022E\n\014center_point\030\001 \001(\0132/.com.her"
      "e.pb.hdmap.external.v1.geometry.Point3d\022"
      "\024\n\014height_in_cm\030\002 \001(\r\022\023\n\013width_in_cm\030\003 \001"
      "(\r\022\032\n\022bearing_in_degrees\030\004 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 678);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "com/here/pb/hdmap/external/v1/geometry/geometry.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point2d::kHere2DCoordinateFieldNumber;
const int Point2d::kZLevelIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point2d::Point2d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
}
Point2d::Point2d(const Point2d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&here_2d_coordinate_, &from.here_2d_coordinate_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_level_index_) -
    reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
}

void Point2d::SharedCtor() {
  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_level_index_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
  _cached_size_ = 0;
}

Point2d::~Point2d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.Point2d)
  SharedDtor();
}

void Point2d::SharedDtor() {
}

void Point2d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point2d::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point2d& Point2d::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point2d* Point2d::New(::google::protobuf::Arena* arena) const {
  Point2d* n = new Point2d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point2d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_level_index_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(z_level_index_));
  _internal_metadata_.Clear();
}

bool Point2d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &here_2d_coordinate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 z_level_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &z_level_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return false;
#undef DO_
}

void Point2d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->here_2d_coordinate(), output);
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->z_level_index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.Point2d)
}

::google::protobuf::uint8* Point2d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->here_2d_coordinate(), target);
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->z_level_index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.Point2d)
  return target;
}

size_t Point2d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->here_2d_coordinate());
  }

  // sint32 z_level_index = 2;
  if (this->z_level_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->z_level_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point2d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point2d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point2d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.Point2d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.Point2d)
    MergeFrom(*source);
  }
}

void Point2d::MergeFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_2d_coordinate() != 0) {
    set_here_2d_coordinate(from.here_2d_coordinate());
  }
  if (from.z_level_index() != 0) {
    set_z_level_index(from.z_level_index());
  }
}

void Point2d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point2d::CopyFrom(const Point2d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point2d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point2d::IsInitialized() const {
  return true;
}

void Point2d::Swap(Point2d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point2d::InternalSwap(Point2d* other) {
  using std::swap;
  swap(here_2d_coordinate_, other->here_2d_coordinate_);
  swap(z_level_index_, other->z_level_index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point2d::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point2d

// sint64 here_2d_coordinate = 1;
void Point2d::clear_here_2d_coordinate() {
  here_2d_coordinate_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Point2d::here_2d_coordinate() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point2d.here_2d_coordinate)
  return here_2d_coordinate_;
}
void Point2d::set_here_2d_coordinate(::google::protobuf::int64 value) {
  
  here_2d_coordinate_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point2d.here_2d_coordinate)
}

// sint32 z_level_index = 2;
void Point2d::clear_z_level_index() {
  z_level_index_ = 0;
}
::google::protobuf::int32 Point2d::z_level_index() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point2d.z_level_index)
  return z_level_index_;
}
void Point2d::set_z_level_index(::google::protobuf::int32 value) {
  
  z_level_index_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point2d.z_level_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3d::kHere2DCoordinateFieldNumber;
const int Point3d::kCmFromWGS84EllipsoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3d::Point3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
}
Point3d::Point3d(const Point3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&here_2d_coordinate_, &from.here_2d_coordinate_,
    static_cast<size_t>(reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
    reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
}

void Point3d::SharedCtor() {
  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
  _cached_size_ = 0;
}

Point3d::~Point3d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.Point3d)
  SharedDtor();
}

void Point3d::SharedDtor() {
}

void Point3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Point3d::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3d& Point3d::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

Point3d* Point3d::New(::google::protobuf::Arena* arena) const {
  Point3d* n = new Point3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Point3d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&here_2d_coordinate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cm_from_wgs84_ellipsoid_) -
      reinterpret_cast<char*>(&here_2d_coordinate_)) + sizeof(cm_from_wgs84_ellipsoid_));
  _internal_metadata_.Clear();
}

bool Point3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint64 here_2d_coordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &here_2d_coordinate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 cm_from_WGS84_ellipsoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cm_from_wgs84_ellipsoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return false;
#undef DO_
}

void Point3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->here_2d_coordinate(), output);
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->cm_from_wgs84_ellipsoid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.Point3d)
}

::google::protobuf::uint8* Point3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->here_2d_coordinate(), target);
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->cm_from_wgs84_ellipsoid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.Point3d)
  return target;
}

size_t Point3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint64 here_2d_coordinate = 1;
  if (this->here_2d_coordinate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->here_2d_coordinate());
  }

  // sint32 cm_from_WGS84_ellipsoid = 2;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cm_from_wgs84_ellipsoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Point3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.Point3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.Point3d)
    MergeFrom(*source);
  }
}

void Point3d::MergeFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.here_2d_coordinate() != 0) {
    set_here_2d_coordinate(from.here_2d_coordinate());
  }
  if (from.cm_from_wgs84_ellipsoid() != 0) {
    set_cm_from_wgs84_ellipsoid(from.cm_from_wgs84_ellipsoid());
  }
}

void Point3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3d::CopyFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3d::IsInitialized() const {
  return true;
}

void Point3d::Swap(Point3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3d::InternalSwap(Point3d* other) {
  using std::swap;
  swap(here_2d_coordinate_, other->here_2d_coordinate_);
  swap(cm_from_wgs84_ellipsoid_, other->cm_from_wgs84_ellipsoid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Point3d::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Point3d

// sint64 here_2d_coordinate = 1;
void Point3d::clear_here_2d_coordinate() {
  here_2d_coordinate_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Point3d::here_2d_coordinate() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point3d.here_2d_coordinate)
  return here_2d_coordinate_;
}
void Point3d::set_here_2d_coordinate(::google::protobuf::int64 value) {
  
  here_2d_coordinate_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point3d.here_2d_coordinate)
}

// sint32 cm_from_WGS84_ellipsoid = 2;
void Point3d::clear_cm_from_wgs84_ellipsoid() {
  cm_from_wgs84_ellipsoid_ = 0;
}
::google::protobuf::int32 Point3d::cm_from_wgs84_ellipsoid() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point3d.cm_from_WGS84_ellipsoid)
  return cm_from_wgs84_ellipsoid_;
}
void Point3d::set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value) {
  
  cm_from_wgs84_ellipsoid_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point3d.cm_from_WGS84_ellipsoid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineString2dOffset::kHere2DCoordinateDiffsFieldNumber;
const int LineString2dOffset::kZLevelIndexesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineString2dOffset::LineString2dOffset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}
LineString2dOffset::LineString2dOffset(const LineString2dOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      here_2d_coordinate_diffs_(from.here_2d_coordinate_diffs_),
      z_level_indexes_(from.z_level_indexes_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}

void LineString2dOffset::SharedCtor() {
  _cached_size_ = 0;
}

LineString2dOffset::~LineString2dOffset() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  SharedDtor();
}

void LineString2dOffset::SharedDtor() {
}

void LineString2dOffset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineString2dOffset::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineString2dOffset& LineString2dOffset::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

LineString2dOffset* LineString2dOffset::New(::google::protobuf::Arena* arena) const {
  LineString2dOffset* n = new LineString2dOffset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LineString2dOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.Clear();
  z_level_indexes_.Clear();
  _internal_metadata_.Clear();
}

bool LineString2dOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_here_2d_coordinate_diffs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_here_2d_coordinate_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 z_level_indexes = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_z_level_indexes())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_z_level_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return false;
#undef DO_
}

void LineString2dOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _here_2d_coordinate_diffs_cached_byte_size_));
  }
  for (int i = 0, n = this->here_2d_coordinate_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->here_2d_coordinate_diffs(i), output);
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  if (this->z_level_indexes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _z_level_indexes_cached_byte_size_));
  }
  for (int i = 0, n = this->z_level_indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->z_level_indexes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
}

::google::protobuf::uint8* LineString2dOffset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _here_2d_coordinate_diffs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->here_2d_coordinate_diffs_, target);
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  if (this->z_level_indexes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _z_level_indexes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->z_level_indexes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  return target;
}

size_t LineString2dOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->here_2d_coordinate_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _here_2d_coordinate_diffs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 z_level_indexes = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->z_level_indexes_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _z_level_indexes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineString2dOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const LineString2dOffset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineString2dOffset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
    MergeFrom(*source);
  }
}

void LineString2dOffset::MergeFrom(const LineString2dOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.MergeFrom(from.here_2d_coordinate_diffs_);
  z_level_indexes_.MergeFrom(from.z_level_indexes_);
}

void LineString2dOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineString2dOffset::CopyFrom(const LineString2dOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineString2dOffset::IsInitialized() const {
  return true;
}

void LineString2dOffset::Swap(LineString2dOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineString2dOffset::InternalSwap(LineString2dOffset* other) {
  using std::swap;
  here_2d_coordinate_diffs_.InternalSwap(&other->here_2d_coordinate_diffs_);
  z_level_indexes_.InternalSwap(&other->z_level_indexes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LineString2dOffset::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LineString2dOffset

// repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
int LineString2dOffset::here_2d_coordinate_diffs_size() const {
  return here_2d_coordinate_diffs_.size();
}
void LineString2dOffset::clear_here_2d_coordinate_diffs() {
  here_2d_coordinate_diffs_.Clear();
}
::google::protobuf::int64 LineString2dOffset::here_2d_coordinate_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_.Get(index);
}
void LineString2dOffset::set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
}
void LineString2dOffset::add_here_2d_coordinate_diffs(::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LineString2dOffset::here_2d_coordinate_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LineString2dOffset::mutable_here_2d_coordinate_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return &here_2d_coordinate_diffs_;
}

// repeated sint32 z_level_indexes = 2 [packed = true];
int LineString2dOffset::z_level_indexes_size() const {
  return z_level_indexes_.size();
}
void LineString2dOffset::clear_z_level_indexes() {
  z_level_indexes_.Clear();
}
::google::protobuf::int32 LineString2dOffset::z_level_indexes(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return z_level_indexes_.Get(index);
}
void LineString2dOffset::set_z_level_indexes(int index, ::google::protobuf::int32 value) {
  z_level_indexes_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
}
void LineString2dOffset::add_z_level_indexes(::google::protobuf::int32 value) {
  z_level_indexes_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LineString2dOffset::z_level_indexes() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return z_level_indexes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LineString2dOffset::mutable_z_level_indexes() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return &z_level_indexes_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LineString3dOffset::kHere2DCoordinateDiffsFieldNumber;
const int LineString3dOffset::kCmFromWGS84EllipsoidDiffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LineString3dOffset::LineString3dOffset()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}
LineString3dOffset::LineString3dOffset(const LineString3dOffset& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      here_2d_coordinate_diffs_(from.here_2d_coordinate_diffs_),
      cm_from_wgs84_ellipsoid_diffs_(from.cm_from_wgs84_ellipsoid_diffs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}

void LineString3dOffset::SharedCtor() {
  _cached_size_ = 0;
}

LineString3dOffset::~LineString3dOffset() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  SharedDtor();
}

void LineString3dOffset::SharedDtor() {
}

void LineString3dOffset::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LineString3dOffset::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LineString3dOffset& LineString3dOffset::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

LineString3dOffset* LineString3dOffset::New(::google::protobuf::Arena* arena) const {
  LineString3dOffset* n = new LineString3dOffset;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LineString3dOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.Clear();
  cm_from_wgs84_ellipsoid_diffs_.Clear();
  _internal_metadata_.Clear();
}

bool LineString3dOffset::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_here_2d_coordinate_diffs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10u, input, this->mutable_here_2d_coordinate_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_cm_from_wgs84_ellipsoid_diffs())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 18u, input, this->mutable_cm_from_wgs84_ellipsoid_diffs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return false;
#undef DO_
}

void LineString3dOffset::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _here_2d_coordinate_diffs_cached_byte_size_));
  }
  for (int i = 0, n = this->here_2d_coordinate_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->here_2d_coordinate_diffs(i), output);
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  if (this->cm_from_wgs84_ellipsoid_diffs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_));
  }
  for (int i = 0, n = this->cm_from_wgs84_ellipsoid_diffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->cm_from_wgs84_ellipsoid_diffs(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
}

::google::protobuf::uint8* LineString3dOffset::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  if (this->here_2d_coordinate_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _here_2d_coordinate_diffs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->here_2d_coordinate_diffs_, target);
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  if (this->cm_from_wgs84_ellipsoid_diffs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->cm_from_wgs84_ellipsoid_diffs_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  return target;
}

size_t LineString3dOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->here_2d_coordinate_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _here_2d_coordinate_diffs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->cm_from_wgs84_ellipsoid_diffs_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LineString3dOffset::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  const LineString3dOffset* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LineString3dOffset>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
    MergeFrom(*source);
  }
}

void LineString3dOffset::MergeFrom(const LineString3dOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  here_2d_coordinate_diffs_.MergeFrom(from.here_2d_coordinate_diffs_);
  cm_from_wgs84_ellipsoid_diffs_.MergeFrom(from.cm_from_wgs84_ellipsoid_diffs_);
}

void LineString3dOffset::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LineString3dOffset::CopyFrom(const LineString3dOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LineString3dOffset::IsInitialized() const {
  return true;
}

void LineString3dOffset::Swap(LineString3dOffset* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LineString3dOffset::InternalSwap(LineString3dOffset* other) {
  using std::swap;
  here_2d_coordinate_diffs_.InternalSwap(&other->here_2d_coordinate_diffs_);
  cm_from_wgs84_ellipsoid_diffs_.InternalSwap(&other->cm_from_wgs84_ellipsoid_diffs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LineString3dOffset::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LineString3dOffset

// repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
int LineString3dOffset::here_2d_coordinate_diffs_size() const {
  return here_2d_coordinate_diffs_.size();
}
void LineString3dOffset::clear_here_2d_coordinate_diffs() {
  here_2d_coordinate_diffs_.Clear();
}
::google::protobuf::int64 LineString3dOffset::here_2d_coordinate_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_.Get(index);
}
void LineString3dOffset::set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
}
void LineString3dOffset::add_here_2d_coordinate_diffs(::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LineString3dOffset::here_2d_coordinate_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LineString3dOffset::mutable_here_2d_coordinate_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return &here_2d_coordinate_diffs_;
}

// repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
int LineString3dOffset::cm_from_wgs84_ellipsoid_diffs_size() const {
  return cm_from_wgs84_ellipsoid_diffs_.size();
}
void LineString3dOffset::clear_cm_from_wgs84_ellipsoid_diffs() {
  cm_from_wgs84_ellipsoid_diffs_.Clear();
}
::google::protobuf::int32 LineString3dOffset::cm_from_wgs84_ellipsoid_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return cm_from_wgs84_ellipsoid_diffs_.Get(index);
}
void LineString3dOffset::set_cm_from_wgs84_ellipsoid_diffs(int index, ::google::protobuf::int32 value) {
  cm_from_wgs84_ellipsoid_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
}
void LineString3dOffset::add_cm_from_wgs84_ellipsoid_diffs(::google::protobuf::int32 value) {
  cm_from_wgs84_ellipsoid_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LineString3dOffset::cm_from_wgs84_ellipsoid_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return cm_from_wgs84_ellipsoid_diffs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LineString3dOffset::mutable_cm_from_wgs84_ellipsoid_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return &cm_from_wgs84_ellipsoid_diffs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ElevationMeasure::kCmFromWGS84EllipsoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ElevationMeasure::ElevationMeasure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}
ElevationMeasure::ElevationMeasure(const ElevationMeasure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cm_from_wgs84_ellipsoid_ = from.cm_from_wgs84_ellipsoid_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}

void ElevationMeasure::SharedCtor() {
  cm_from_wgs84_ellipsoid_ = 0;
  _cached_size_ = 0;
}

ElevationMeasure::~ElevationMeasure() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  SharedDtor();
}

void ElevationMeasure::SharedDtor() {
}

void ElevationMeasure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ElevationMeasure::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ElevationMeasure& ElevationMeasure::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

ElevationMeasure* ElevationMeasure::New(::google::protobuf::Arena* arena) const {
  ElevationMeasure* n = new ElevationMeasure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ElevationMeasure::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cm_from_wgs84_ellipsoid_ = 0;
  _internal_metadata_.Clear();
}

bool ElevationMeasure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 cm_from_WGS84_ellipsoid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &cm_from_wgs84_ellipsoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return false;
#undef DO_
}

void ElevationMeasure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->cm_from_wgs84_ellipsoid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
}

::google::protobuf::uint8* ElevationMeasure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->cm_from_wgs84_ellipsoid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  return target;
}

size_t ElevationMeasure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 cm_from_WGS84_ellipsoid = 1;
  if (this->cm_from_wgs84_ellipsoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->cm_from_wgs84_ellipsoid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ElevationMeasure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  const ElevationMeasure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ElevationMeasure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
    MergeFrom(*source);
  }
}

void ElevationMeasure::MergeFrom(const ElevationMeasure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cm_from_wgs84_ellipsoid() != 0) {
    set_cm_from_wgs84_ellipsoid(from.cm_from_wgs84_ellipsoid());
  }
}

void ElevationMeasure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ElevationMeasure::CopyFrom(const ElevationMeasure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ElevationMeasure::IsInitialized() const {
  return true;
}

void ElevationMeasure::Swap(ElevationMeasure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ElevationMeasure::InternalSwap(ElevationMeasure* other) {
  using std::swap;
  swap(cm_from_wgs84_ellipsoid_, other->cm_from_wgs84_ellipsoid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ElevationMeasure::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ElevationMeasure

// sint32 cm_from_WGS84_ellipsoid = 1;
void ElevationMeasure::clear_cm_from_wgs84_ellipsoid() {
  cm_from_wgs84_ellipsoid_ = 0;
}
::google::protobuf::int32 ElevationMeasure::cm_from_wgs84_ellipsoid() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure.cm_from_WGS84_ellipsoid)
  return cm_from_wgs84_ellipsoid_;
}
void ElevationMeasure::set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value) {
  
  cm_from_wgs84_ellipsoid_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure.cm_from_WGS84_ellipsoid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ZLevelIndex::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ZLevelIndex::ZLevelIndex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}
ZLevelIndex::ZLevelIndex(const ZLevelIndex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}

void ZLevelIndex::SharedCtor() {
  index_ = 0;
  _cached_size_ = 0;
}

ZLevelIndex::~ZLevelIndex() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  SharedDtor();
}

void ZLevelIndex::SharedDtor() {
}

void ZLevelIndex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ZLevelIndex::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ZLevelIndex& ZLevelIndex::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

ZLevelIndex* ZLevelIndex::New(::google::protobuf::Arena* arena) const {
  ZLevelIndex* n = new ZLevelIndex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ZLevelIndex::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear();
}

bool ZLevelIndex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return false;
#undef DO_
}

void ZLevelIndex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
}

::google::protobuf::uint8* ZLevelIndex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  return target;
}

size_t ZLevelIndex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // sint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ZLevelIndex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  const ZLevelIndex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ZLevelIndex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
    MergeFrom(*source);
  }
}

void ZLevelIndex::MergeFrom(const ZLevelIndex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ZLevelIndex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZLevelIndex::CopyFrom(const ZLevelIndex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZLevelIndex::IsInitialized() const {
  return true;
}

void ZLevelIndex::Swap(ZLevelIndex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ZLevelIndex::InternalSwap(ZLevelIndex* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ZLevelIndex::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ZLevelIndex

// sint32 index = 1;
void ZLevelIndex::clear_index() {
  index_ = 0;
}
::google::protobuf::int32 ZLevelIndex::index() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex.index)
  return index_;
}
void ZLevelIndex::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrientedRectangle3d::kCenterPointFieldNumber;
const int OrientedRectangle3d::kHeightInCmFieldNumber;
const int OrientedRectangle3d::kWidthInCmFieldNumber;
const int OrientedRectangle3d::kBearingInDegreesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrientedRectangle3d::OrientedRectangle3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}
OrientedRectangle3d::OrientedRectangle3d(const OrientedRectangle3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_center_point()) {
    center_point_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d(*from.center_point_);
  } else {
    center_point_ = NULL;
  }
  ::memcpy(&height_in_cm_, &from.height_in_cm_,
    static_cast<size_t>(reinterpret_cast<char*>(&bearing_in_degrees_) -
    reinterpret_cast<char*>(&height_in_cm_)) + sizeof(bearing_in_degrees_));
  // @@protoc_insertion_point(copy_constructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}

void OrientedRectangle3d::SharedCtor() {
  ::memset(&center_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bearing_in_degrees_) -
      reinterpret_cast<char*>(&center_point_)) + sizeof(bearing_in_degrees_));
  _cached_size_ = 0;
}

OrientedRectangle3d::~OrientedRectangle3d() {
  // @@protoc_insertion_point(destructor:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  SharedDtor();
}

void OrientedRectangle3d::SharedDtor() {
  if (this != internal_default_instance()) delete center_point_;
}

void OrientedRectangle3d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrientedRectangle3d::descriptor() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrientedRectangle3d& OrientedRectangle3d::default_instance() {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrientedRectangle3d* OrientedRectangle3d::New(::google::protobuf::Arena* arena) const {
  OrientedRectangle3d* n = new OrientedRectangle3d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrientedRectangle3d::Clear() {
// @@protoc_insertion_point(message_clear_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && center_point_ != NULL) {
    delete center_point_;
  }
  center_point_ = NULL;
  ::memset(&height_in_cm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bearing_in_degrees_) -
      reinterpret_cast<char*>(&height_in_cm_)) + sizeof(bearing_in_degrees_));
  _internal_metadata_.Clear();
}

bool OrientedRectangle3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_center_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height_in_cm = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_in_cm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width_in_cm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_in_cm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bearing_in_degrees = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bearing_in_degrees_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return false;
#undef DO_
}

void OrientedRectangle3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->center_point_, output);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->height_in_cm(), output);
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width_in_cm(), output);
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bearing_in_degrees(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
}

::google::protobuf::uint8* OrientedRectangle3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->center_point_, deterministic, target);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->height_in_cm(), target);
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width_in_cm(), target);
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bearing_in_degrees(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  return target;
}

size_t OrientedRectangle3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  if (this->has_center_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->center_point_);
  }

  // uint32 height_in_cm = 2;
  if (this->height_in_cm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height_in_cm());
  }

  // uint32 width_in_cm = 3;
  if (this->width_in_cm() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width_in_cm());
  }

  // uint32 bearing_in_degrees = 4;
  if (this->bearing_in_degrees() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bearing_in_degrees());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrientedRectangle3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  GOOGLE_DCHECK_NE(&from, this);
  const OrientedRectangle3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrientedRectangle3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
    MergeFrom(*source);
  }
}

void OrientedRectangle3d::MergeFrom(const OrientedRectangle3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_center_point()) {
    mutable_center_point()->::com::here::pb::hdmap::external::v1::geometry::Point3d::MergeFrom(from.center_point());
  }
  if (from.height_in_cm() != 0) {
    set_height_in_cm(from.height_in_cm());
  }
  if (from.width_in_cm() != 0) {
    set_width_in_cm(from.width_in_cm());
  }
  if (from.bearing_in_degrees() != 0) {
    set_bearing_in_degrees(from.bearing_in_degrees());
  }
}

void OrientedRectangle3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrientedRectangle3d::CopyFrom(const OrientedRectangle3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrientedRectangle3d::IsInitialized() const {
  return true;
}

void OrientedRectangle3d::Swap(OrientedRectangle3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrientedRectangle3d::InternalSwap(OrientedRectangle3d* other) {
  using std::swap;
  swap(center_point_, other->center_point_);
  swap(height_in_cm_, other->height_in_cm_);
  swap(width_in_cm_, other->width_in_cm_);
  swap(bearing_in_degrees_, other->bearing_in_degrees_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrientedRectangle3d::GetMetadata() const {
  protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrientedRectangle3d

// .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
bool OrientedRectangle3d::has_center_point() const {
  return this != internal_default_instance() && center_point_ != NULL;
}
void OrientedRectangle3d::clear_center_point() {
  if (GetArenaNoVirtual() == NULL && center_point_ != NULL) delete center_point_;
  center_point_ = NULL;
}
const ::com::here::pb::hdmap::external::v1::geometry::Point3d& OrientedRectangle3d::center_point() const {
  const ::com::here::pb::hdmap::external::v1::geometry::Point3d* p = center_point_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      &::com::here::pb::hdmap::external::v1::geometry::_Point3d_default_instance_);
}
::com::here::pb::hdmap::external::v1::geometry::Point3d* OrientedRectangle3d::mutable_center_point() {
  
  if (center_point_ == NULL) {
    center_point_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  return center_point_;
}
::com::here::pb::hdmap::external::v1::geometry::Point3d* OrientedRectangle3d::release_center_point() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* temp = center_point_;
  center_point_ = NULL;
  return temp;
}
void OrientedRectangle3d::set_allocated_center_point(::com::here::pb::hdmap::external::v1::geometry::Point3d* center_point) {
  delete center_point_;
  center_point_ = center_point;
  if (center_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
}

// uint32 height_in_cm = 2;
void OrientedRectangle3d::clear_height_in_cm() {
  height_in_cm_ = 0u;
}
::google::protobuf::uint32 OrientedRectangle3d::height_in_cm() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.height_in_cm)
  return height_in_cm_;
}
void OrientedRectangle3d::set_height_in_cm(::google::protobuf::uint32 value) {
  
  height_in_cm_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.height_in_cm)
}

// uint32 width_in_cm = 3;
void OrientedRectangle3d::clear_width_in_cm() {
  width_in_cm_ = 0u;
}
::google::protobuf::uint32 OrientedRectangle3d::width_in_cm() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.width_in_cm)
  return width_in_cm_;
}
void OrientedRectangle3d::set_width_in_cm(::google::protobuf::uint32 value) {
  
  width_in_cm_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.width_in_cm)
}

// uint32 bearing_in_degrees = 4;
void OrientedRectangle3d::clear_bearing_in_degrees() {
  bearing_in_degrees_ = 0u;
}
::google::protobuf::uint32 OrientedRectangle3d::bearing_in_degrees() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.bearing_in_degrees)
  return bearing_in_degrees_;
}
void OrientedRectangle3d::set_bearing_in_degrees(::google::protobuf::uint32 value) {
  
  bearing_in_degrees_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.bearing_in_degrees)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace geometry
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/here/pb/hdmap/external/v1/geometry/geometry.proto

#ifndef PROTOBUF_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto__INCLUDED
#define PROTOBUF_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace geometry {
class ElevationMeasure;
class ElevationMeasureDefaultTypeInternal;
extern ElevationMeasureDefaultTypeInternal _ElevationMeasure_default_instance_;
class LineString2dOffset;
class LineString2dOffsetDefaultTypeInternal;
extern LineString2dOffsetDefaultTypeInternal _LineString2dOffset_default_instance_;
class LineString3dOffset;
class LineString3dOffsetDefaultTypeInternal;
extern LineString3dOffsetDefaultTypeInternal _LineString3dOffset_default_instance_;
class OrientedRectangle3d;
class OrientedRectangle3dDefaultTypeInternal;
extern OrientedRectangle3dDefaultTypeInternal _OrientedRectangle3d_default_instance_;
class Point2d;
class Point2dDefaultTypeInternal;
extern Point2dDefaultTypeInternal _Point2d_default_instance_;
class Point3d;
class Point3dDefaultTypeInternal;
extern Point3dDefaultTypeInternal _Point3d_default_instance_;
class ZLevelIndex;
class ZLevelIndexDefaultTypeInternal;
extern ZLevelIndexDefaultTypeInternal _ZLevelIndex_default_instance_;
}  // namespace geometry
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

namespace com {
namespace here {
namespace pb {
namespace hdmap {
namespace external {
namespace v1 {
namespace geometry {

namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto

// ===================================================================

class Point2d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.Point2d) */ {
 public:
  Point2d();
  virtual ~Point2d();

  Point2d(const Point2d& from);

  inline Point2d& operator=(const Point2d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point2d(Point2d&& from) noexcept
    : Point2d() {
    *this = ::std::move(from);
  }

  inline Point2d& operator=(Point2d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2d& default_instance();

  static inline const Point2d* internal_default_instance() {
    return reinterpret_cast<const Point2d*>(
               &_Point2d_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Point2d* other);
  friend void swap(Point2d& a, Point2d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point2d* New() const PROTOBUF_FINAL { return New(NULL); }

  Point2d* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point2d& from);
  void MergeFrom(const Point2d& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point2d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 here_2d_coordinate = 1;
  void clear_here_2d_coordinate();
  static const int kHere2DCoordinateFieldNumber = 1;
  ::google::protobuf::int64 here_2d_coordinate() const;
  void set_here_2d_coordinate(::google::protobuf::int64 value);

  // sint32 z_level_index = 2;
  void clear_z_level_index();
  static const int kZLevelIndexFieldNumber = 2;
  ::google::protobuf::int32 z_level_index() const;
  void set_z_level_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.Point2d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 here_2d_coordinate_;
  ::google::protobuf::int32 z_level_index_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.Point3d) */ {
 public:
  Point3d();
  virtual ~Point3d();

  Point3d(const Point3d& from);

  inline Point3d& operator=(const Point3d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Point3d(Point3d&& from) noexcept
    : Point3d() {
    *this = ::std::move(from);
  }

  inline Point3d& operator=(Point3d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3d& default_instance();

  static inline const Point3d* internal_default_instance() {
    return reinterpret_cast<const Point3d*>(
               &_Point3d_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Point3d* other);
  friend void swap(Point3d& a, Point3d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Point3d* New() const PROTOBUF_FINAL { return New(NULL); }

  Point3d* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point3d& from);
  void MergeFrom(const Point3d& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint64 here_2d_coordinate = 1;
  void clear_here_2d_coordinate();
  static const int kHere2DCoordinateFieldNumber = 1;
  ::google::protobuf::int64 here_2d_coordinate() const;
  void set_here_2d_coordinate(::google::protobuf::int64 value);

  // sint32 cm_from_WGS84_ellipsoid = 2;
  void clear_cm_from_wgs84_ellipsoid();
  static const int kCmFromWGS84EllipsoidFieldNumber = 2;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid() const;
  void set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.Point3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 here_2d_coordinate_;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LineString2dOffset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset) */ {
 public:
  LineString2dOffset();
  virtual ~LineString2dOffset();

  LineString2dOffset(const LineString2dOffset& from);

  inline LineString2dOffset& operator=(const LineString2dOffset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LineString2dOffset(LineString2dOffset&& from) noexcept
    : LineString2dOffset() {
    *this = ::std::move(from);
  }

  inline LineString2dOffset& operator=(LineString2dOffset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LineString2dOffset& default_instance();

  static inline const LineString2dOffset* internal_default_instance() {
    return reinterpret_cast<const LineString2dOffset*>(
               &_LineString2dOffset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LineString2dOffset* other);
  friend void swap(LineString2dOffset& a, LineString2dOffset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LineString2dOffset* New() const PROTOBUF_FINAL { return New(NULL); }

  LineString2dOffset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LineString2dOffset& from);
  void MergeFrom(const LineString2dOffset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LineString2dOffset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  int here_2d_coordinate_diffs_size() const;
  void clear_here_2d_coordinate_diffs();
  static const int kHere2DCoordinateDiffsFieldNumber = 1;
  ::google::protobuf::int64 here_2d_coordinate_diffs(int index) const;
  void set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value);
  void add_here_2d_coordinate_diffs(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      here_2d_coordinate_diffs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_here_2d_coordinate_diffs();

  // repeated sint32 z_level_indexes = 2 [packed = true];
  int z_level_indexes_size() const;
  void clear_z_level_indexes();
  static const int kZLevelIndexesFieldNumber = 2;
  ::google::protobuf::int32 z_level_indexes(int index) const;
  void set_z_level_indexes(int index, ::google::protobuf::int32 value);
  void add_z_level_indexes(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      z_level_indexes() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_z_level_indexes();

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > here_2d_coordinate_diffs_;
  mutable int _here_2d_coordinate_diffs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > z_level_indexes_;
  mutable int _z_level_indexes_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LineString3dOffset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset) */ {
 public:
  LineString3dOffset();
  virtual ~LineString3dOffset();

  LineString3dOffset(const LineString3dOffset& from);

  inline LineString3dOffset& operator=(const LineString3dOffset& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LineString3dOffset(LineString3dOffset&& from) noexcept
    : LineString3dOffset() {
    *this = ::std::move(from);
  }

  inline LineString3dOffset& operator=(LineString3dOffset&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LineString3dOffset& default_instance();

  static inline const LineString3dOffset* internal_default_instance() {
    return reinterpret_cast<const LineString3dOffset*>(
               &_LineString3dOffset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LineString3dOffset* other);
  friend void swap(LineString3dOffset& a, LineString3dOffset& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LineString3dOffset* New() const PROTOBUF_FINAL { return New(NULL); }

  LineString3dOffset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LineString3dOffset& from);
  void MergeFrom(const LineString3dOffset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LineString3dOffset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
  int here_2d_coordinate_diffs_size() const;
  void clear_here_2d_coordinate_diffs();
  static const int kHere2DCoordinateDiffsFieldNumber = 1;
  ::google::protobuf::int64 here_2d_coordinate_diffs(int index) const;
  void set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value);
  void add_here_2d_coordinate_diffs(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      here_2d_coordinate_diffs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_here_2d_coordinate_diffs();

  // repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
  int cm_from_wgs84_ellipsoid_diffs_size() const;
  void clear_cm_from_wgs84_ellipsoid_diffs();
  static const int kCmFromWGS84EllipsoidDiffsFieldNumber = 2;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid_diffs(int index) const;
  void set_cm_from_wgs84_ellipsoid_diffs(int index, ::google::protobuf::int32 value);
  void add_cm_from_wgs84_ellipsoid_diffs(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      cm_from_wgs84_ellipsoid_diffs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_cm_from_wgs84_ellipsoid_diffs();

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > here_2d_coordinate_diffs_;
  mutable int _here_2d_coordinate_diffs_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > cm_from_wgs84_ellipsoid_diffs_;
  mutable int _cm_from_wgs84_ellipsoid_diffs_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ElevationMeasure : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure) */ {
 public:
  ElevationMeasure();
  virtual ~ElevationMeasure();

  ElevationMeasure(const ElevationMeasure& from);

  inline ElevationMeasure& operator=(const ElevationMeasure& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ElevationMeasure(ElevationMeasure&& from) noexcept
    : ElevationMeasure() {
    *this = ::std::move(from);
  }

  inline ElevationMeasure& operator=(ElevationMeasure&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ElevationMeasure& default_instance();

  static inline const ElevationMeasure* internal_default_instance() {
    return reinterpret_cast<const ElevationMeasure*>(
               &_ElevationMeasure_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ElevationMeasure* other);
  friend void swap(ElevationMeasure& a, ElevationMeasure& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ElevationMeasure* New() const PROTOBUF_FINAL { return New(NULL); }

  ElevationMeasure* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ElevationMeasure& from);
  void MergeFrom(const ElevationMeasure& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ElevationMeasure* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 cm_from_WGS84_ellipsoid = 1;
  void clear_cm_from_wgs84_ellipsoid();
  static const int kCmFromWGS84EllipsoidFieldNumber = 1;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid() const;
  void set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 cm_from_wgs84_ellipsoid_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ZLevelIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex) */ {
 public:
  ZLevelIndex();
  virtual ~ZLevelIndex();

  ZLevelIndex(const ZLevelIndex& from);

  inline ZLevelIndex& operator=(const ZLevelIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ZLevelIndex(ZLevelIndex&& from) noexcept
    : ZLevelIndex() {
    *this = ::std::move(from);
  }

  inline ZLevelIndex& operator=(ZLevelIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ZLevelIndex& default_instance();

  static inline const ZLevelIndex* internal_default_instance() {
    return reinterpret_cast<const ZLevelIndex*>(
               &_ZLevelIndex_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ZLevelIndex* other);
  friend void swap(ZLevelIndex& a, ZLevelIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ZLevelIndex* New() const PROTOBUF_FINAL { return New(NULL); }

  ZLevelIndex* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ZLevelIndex& from);
  void MergeFrom(const ZLevelIndex& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ZLevelIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrientedRectangle3d : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d) */ {
 public:
  OrientedRectangle3d();
  virtual ~OrientedRectangle3d();

  OrientedRectangle3d(const OrientedRectangle3d& from);

  inline OrientedRectangle3d& operator=(const OrientedRectangle3d& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrientedRectangle3d(OrientedRectangle3d&& from) noexcept
    : OrientedRectangle3d() {
    *this = ::std::move(from);
  }

  inline OrientedRectangle3d& operator=(OrientedRectangle3d&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrientedRectangle3d& default_instance();

  static inline const OrientedRectangle3d* internal_default_instance() {
    return reinterpret_cast<const OrientedRectangle3d*>(
               &_OrientedRectangle3d_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OrientedRectangle3d* other);
  friend void swap(OrientedRectangle3d& a, OrientedRectangle3d& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrientedRectangle3d* New() const PROTOBUF_FINAL { return New(NULL); }

  OrientedRectangle3d* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrientedRectangle3d& from);
  void MergeFrom(const OrientedRectangle3d& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrientedRectangle3d* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
  bool has_center_point() const;
  void clear_center_point();
  static const int kCenterPointFieldNumber = 1;
  const ::com::here::pb::hdmap::external::v1::geometry::Point3d& center_point() const;
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* mutable_center_point();
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* release_center_point();
  void set_allocated_center_point(::com::here::pb::hdmap::external::v1::geometry::Point3d* center_point);

  // uint32 height_in_cm = 2;
  void clear_height_in_cm();
  static const int kHeightInCmFieldNumber = 2;
  ::google::protobuf::uint32 height_in_cm() const;
  void set_height_in_cm(::google::protobuf::uint32 value);

  // uint32 width_in_cm = 3;
  void clear_width_in_cm();
  static const int kWidthInCmFieldNumber = 3;
  ::google::protobuf::uint32 width_in_cm() const;
  void set_width_in_cm(::google::protobuf::uint32 value);

  // uint32 bearing_in_degrees = 4;
  void clear_bearing_in_degrees();
  static const int kBearingInDegreesFieldNumber = 4;
  ::google::protobuf::uint32 bearing_in_degrees() const;
  void set_bearing_in_degrees(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* center_point_;
  ::google::protobuf::uint32 height_in_cm_;
  ::google::protobuf::uint32 width_in_cm_;
  ::google::protobuf::uint32 bearing_in_degrees_;
  mutable int _cached_size_;
  friend struct protobuf_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Point2d

// sint64 here_2d_coordinate = 1;
inline void Point2d::clear_here_2d_coordinate() {
  here_2d_coordinate_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Point2d::here_2d_coordinate() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point2d.here_2d_coordinate)
  return here_2d_coordinate_;
}
inline void Point2d::set_here_2d_coordinate(::google::protobuf::int64 value) {
  
  here_2d_coordinate_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point2d.here_2d_coordinate)
}

// sint32 z_level_index = 2;
inline void Point2d::clear_z_level_index() {
  z_level_index_ = 0;
}
inline ::google::protobuf::int32 Point2d::z_level_index() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point2d.z_level_index)
  return z_level_index_;
}
inline void Point2d::set_z_level_index(::google::protobuf::int32 value) {
  
  z_level_index_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point2d.z_level_index)
}

// -------------------------------------------------------------------

// Point3d

// sint64 here_2d_coordinate = 1;
inline void Point3d::clear_here_2d_coordinate() {
  here_2d_coordinate_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Point3d::here_2d_coordinate() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point3d.here_2d_coordinate)
  return here_2d_coordinate_;
}
inline void Point3d::set_here_2d_coordinate(::google::protobuf::int64 value) {
  
  here_2d_coordinate_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point3d.here_2d_coordinate)
}

// sint32 cm_from_WGS84_ellipsoid = 2;
inline void Point3d::clear_cm_from_wgs84_ellipsoid() {
  cm_from_wgs84_ellipsoid_ = 0;
}
inline ::google::protobuf::int32 Point3d::cm_from_wgs84_ellipsoid() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.Point3d.cm_from_WGS84_ellipsoid)
  return cm_from_wgs84_ellipsoid_;
}
inline void Point3d::set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value) {
  
  cm_from_wgs84_ellipsoid_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.Point3d.cm_from_WGS84_ellipsoid)
}

// -------------------------------------------------------------------

// LineString2dOffset

// repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
inline int LineString2dOffset::here_2d_coordinate_diffs_size() const {
  return here_2d_coordinate_diffs_.size();
}
inline void LineString2dOffset::clear_here_2d_coordinate_diffs() {
  here_2d_coordinate_diffs_.Clear();
}
inline ::google::protobuf::int64 LineString2dOffset::here_2d_coordinate_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_.Get(index);
}
inline void LineString2dOffset::set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
}
inline void LineString2dOffset::add_here_2d_coordinate_diffs(::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LineString2dOffset::here_2d_coordinate_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LineString2dOffset::mutable_here_2d_coordinate_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.here_2d_coordinate_diffs)
  return &here_2d_coordinate_diffs_;
}

// repeated sint32 z_level_indexes = 2 [packed = true];
inline int LineString2dOffset::z_level_indexes_size() const {
  return z_level_indexes_.size();
}
inline void LineString2dOffset::clear_z_level_indexes() {
  z_level_indexes_.Clear();
}
inline ::google::protobuf::int32 LineString2dOffset::z_level_indexes(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return z_level_indexes_.Get(index);
}
inline void LineString2dOffset::set_z_level_indexes(int index, ::google::protobuf::int32 value) {
  z_level_indexes_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
}
inline void LineString2dOffset::add_z_level_indexes(::google::protobuf::int32 value) {
  z_level_indexes_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LineString2dOffset::z_level_indexes() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return z_level_indexes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LineString2dOffset::mutable_z_level_indexes() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString2dOffset.z_level_indexes)
  return &z_level_indexes_;
}

// -------------------------------------------------------------------

// LineString3dOffset

// repeated sint64 here_2d_coordinate_diffs = 1 [packed = true];
inline int LineString3dOffset::here_2d_coordinate_diffs_size() const {
  return here_2d_coordinate_diffs_.size();
}
inline void LineString3dOffset::clear_here_2d_coordinate_diffs() {
  here_2d_coordinate_diffs_.Clear();
}
inline ::google::protobuf::int64 LineString3dOffset::here_2d_coordinate_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_.Get(index);
}
inline void LineString3dOffset::set_here_2d_coordinate_diffs(int index, ::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
}
inline void LineString3dOffset::add_here_2d_coordinate_diffs(::google::protobuf::int64 value) {
  here_2d_coordinate_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LineString3dOffset::here_2d_coordinate_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return here_2d_coordinate_diffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LineString3dOffset::mutable_here_2d_coordinate_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.here_2d_coordinate_diffs)
  return &here_2d_coordinate_diffs_;
}

// repeated sint32 cm_from_WGS84_ellipsoid_diffs = 2 [packed = true];
inline int LineString3dOffset::cm_from_wgs84_ellipsoid_diffs_size() const {
  return cm_from_wgs84_ellipsoid_diffs_.size();
}
inline void LineString3dOffset::clear_cm_from_wgs84_ellipsoid_diffs() {
  cm_from_wgs84_ellipsoid_diffs_.Clear();
}
inline ::google::protobuf::int32 LineString3dOffset::cm_from_wgs84_ellipsoid_diffs(int index) const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return cm_from_wgs84_ellipsoid_diffs_.Get(index);
}
inline void LineString3dOffset::set_cm_from_wgs84_ellipsoid_diffs(int index, ::google::protobuf::int32 value) {
  cm_from_wgs84_ellipsoid_diffs_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
}
inline void LineString3dOffset::add_cm_from_wgs84_ellipsoid_diffs(::google::protobuf::int32 value) {
  cm_from_wgs84_ellipsoid_diffs_.Add(value);
  // @@protoc_insertion_point(field_add:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LineString3dOffset::cm_from_wgs84_ellipsoid_diffs() const {
  // @@protoc_insertion_point(field_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return cm_from_wgs84_ellipsoid_diffs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LineString3dOffset::mutable_cm_from_wgs84_ellipsoid_diffs() {
  // @@protoc_insertion_point(field_mutable_list:com.here.pb.hdmap.external.v1.geometry.LineString3dOffset.cm_from_WGS84_ellipsoid_diffs)
  return &cm_from_wgs84_ellipsoid_diffs_;
}

// -------------------------------------------------------------------

// ElevationMeasure

// sint32 cm_from_WGS84_ellipsoid = 1;
inline void ElevationMeasure::clear_cm_from_wgs84_ellipsoid() {
  cm_from_wgs84_ellipsoid_ = 0;
}
inline ::google::protobuf::int32 ElevationMeasure::cm_from_wgs84_ellipsoid() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure.cm_from_WGS84_ellipsoid)
  return cm_from_wgs84_ellipsoid_;
}
inline void ElevationMeasure::set_cm_from_wgs84_ellipsoid(::google::protobuf::int32 value) {
  
  cm_from_wgs84_ellipsoid_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.ElevationMeasure.cm_from_WGS84_ellipsoid)
}

// -------------------------------------------------------------------

// ZLevelIndex

// sint32 index = 1;
inline void ZLevelIndex::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 ZLevelIndex::index() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex.index)
  return index_;
}
inline void ZLevelIndex::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.ZLevelIndex.index)
}

// -------------------------------------------------------------------

// OrientedRectangle3d

// .com.here.pb.hdmap.external.v1.geometry.Point3d center_point = 1;
inline bool OrientedRectangle3d::has_center_point() const {
  return this != internal_default_instance() && center_point_ != NULL;
}
inline void OrientedRectangle3d::clear_center_point() {
  if (GetArenaNoVirtual() == NULL && center_point_ != NULL) delete center_point_;
  center_point_ = NULL;
}
inline const ::com::here::pb::hdmap::external::v1::geometry::Point3d& OrientedRectangle3d::center_point() const {
  const ::com::here::pb::hdmap::external::v1::geometry::Point3d* p = center_point_;
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  return p != NULL ? *p : *reinterpret_cast<const ::com::here::pb::hdmap::external::v1::geometry::Point3d*>(
      &::com::here::pb::hdmap::external::v1::geometry::_Point3d_default_instance_);
}
inline ::com::here::pb::hdmap::external::v1::geometry::Point3d* OrientedRectangle3d::mutable_center_point() {
  
  if (center_point_ == NULL) {
    center_point_ = new ::com::here::pb::hdmap::external::v1::geometry::Point3d;
  }
  // @@protoc_insertion_point(field_mutable:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  return center_point_;
}
inline ::com::here::pb::hdmap::external::v1::geometry::Point3d* OrientedRectangle3d::release_center_point() {
  // @@protoc_insertion_point(field_release:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
  
  ::com::here::pb::hdmap::external::v1::geometry::Point3d* temp = center_point_;
  center_point_ = NULL;
  return temp;
}
inline void OrientedRectangle3d::set_allocated_center_point(::com::here::pb::hdmap::external::v1::geometry::Point3d* center_point) {
  delete center_point_;
  center_point_ = center_point;
  if (center_point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.center_point)
}

// uint32 height_in_cm = 2;
inline void OrientedRectangle3d::clear_height_in_cm() {
  height_in_cm_ = 0u;
}
inline ::google::protobuf::uint32 OrientedRectangle3d::height_in_cm() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.height_in_cm)
  return height_in_cm_;
}
inline void OrientedRectangle3d::set_height_in_cm(::google::protobuf::uint32 value) {
  
  height_in_cm_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.height_in_cm)
}

// uint32 width_in_cm = 3;
inline void OrientedRectangle3d::clear_width_in_cm() {
  width_in_cm_ = 0u;
}
inline ::google::protobuf::uint32 OrientedRectangle3d::width_in_cm() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.width_in_cm)
  return width_in_cm_;
}
inline void OrientedRectangle3d::set_width_in_cm(::google::protobuf::uint32 value) {
  
  width_in_cm_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.width_in_cm)
}

// uint32 bearing_in_degrees = 4;
inline void OrientedRectangle3d::clear_bearing_in_degrees() {
  bearing_in_degrees_ = 0u;
}
inline ::google::protobuf::uint32 OrientedRectangle3d::bearing_in_degrees() const {
  // @@protoc_insertion_point(field_get:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.bearing_in_degrees)
  return bearing_in_degrees_;
}
inline void OrientedRectangle3d::set_bearing_in_degrees(::google::protobuf::uint32 value) {
  
  bearing_in_degrees_ = value;
  // @@protoc_insertion_point(field_set:com.here.pb.hdmap.external.v1.geometry.OrientedRectangle3d.bearing_in_degrees)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace geometry
}  // namespace v1
}  // namespace external
}  // namespace hdmap
}  // namespace pb
}  // namespace here
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_com_2fhere_2fpb_2fhdmap_2fexternal_2fv1_2fgeometry_2fgeometry_2eproto__INCLUDED
